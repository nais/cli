name: Nais CLI
on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches: [main]
    paths-ignore: ["**.md"]
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  release-info:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release-info.outputs.version }}
      changelog: ${{ steps.release-info.outputs.changelog }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: jdx/mise-action@v3
      - id: release-info
        run: mise run ci:release-info
  checks:
    strategy:
      matrix:
        mise-task:
          - check:deadcode
          - check:govet
          - check:govulncheck
          - check:staticcheck
          - ci:fmt
          - test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
      - uses: jdx/mise-action@v3
      - run: mise run ${{ matrix.mise-task }}
  builds:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
        os: [windows, linux, darwin]
    needs: [release-info]
    steps:
      - uses: actions/checkout@v5
      - uses: jdx/mise-action@v3
      - name: build
        env:
          VERSION: ${{ needs.release-info.outputs.version }}
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          SIGN_CERT: ${{ secrets.SIGN_CERT }}
          SIGN_KEY: ${{ secrets.SIGN_KEY }}
        run: mise run ci:build
      - uses: actions/upload-artifact@v4
        with:
          name: archive-${{ matrix.os }}-${{ matrix.arch }}
          path: nais-cli_${{ matrix.os }}_${{ matrix.arch }}.tar.gz
  package-deb:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    needs: [release-info]
    steps:
      - uses: actions/checkout@v5
      - uses: jdx/mise-action@v3
      - name: package deb
        env:
          VERSION: ${{ needs.release-info.outputs.version }}
          GOARCH: ${{ matrix.arch }}
        run: mise run package-deb
      - uses: actions/upload-artifact@v4
        with:
          name: deb-${{ matrix.arch }}
          path: nais-cli_${{ matrix.arch }}.deb
  # Used by GitHub to determine if all checks/builds have passed
  branch-protection-checkpoint:
    runs-on: ubuntu-latest
    needs: [checks, builds, package-deb]
    steps:
      - run: echo Checks and builds passed
  release-github:
    if: github.ref == 'refs/heads/main' && needs.release-info.outputs.changelog != '' && needs.release-info.outputs.version != ''
    runs-on: ubuntu-latest
    needs: [release-info, branch-protection-checkpoint]
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: jdx/mise-action@v3
      - uses: actions/download-artifact@v5
        with:
          merge-multiple: true
          path: release_artifacts
      - run: mise run ci:generate-checksums ./release_artifacts/ > ./release_artifacts/checksums.txt
      - uses: softprops/action-gh-release@v2
        id: release
        with:
          tag_name: ${{ needs.release-info.outputs.version }}
          body: ${{ needs.release-info.outputs.changelog }}
          prerelease: false
          files: ./release_artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - env:
          VERSION: ${{ needs.release-info.outputs.version }}
        run: |
          echo '${{ steps.release.outputs.assets }}' > assets.json
          mise run ci:prepare-template-vars ./release_artifacts/checksums.txt ./assets.json -v > template.vars
      - uses: actions/upload-artifact@v4
        with:
          name: template-vars
          path: ./template.vars
      - run: |
          echo "## :rocket: Release ${{ needs.release-info.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "A new release is available over at https://github.com/${{ github.repository }}/releases/tag/${{ needs.release-info.outputs.version }}." >> $GITHUB_STEP_SUMMARY
  release-gar:
    if: github.ref == 'refs/heads/main'
    needs: [release-github]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v5
      - id: auth
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: ${{ secrets.NAIS_IO_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: gh-cli@nais-io.iam.gserviceaccount.com
          token_format: access_token
      - uses: google-github-actions/setup-gcloud@v3
      - uses: actions/download-artifact@v5
        with:
          name: deb-arm64
      - uses: actions/download-artifact@v5
        with:
          name: deb-amd64
      - name: Upload new deb file to Google repository
        run: |
          gcloud --project nais-io artifacts apt upload nais-ppa --quiet --source nais-cli_arm64.deb --location europe-north1
          gcloud --project nais-io artifacts apt upload nais-ppa --quiet --source nais-cli_amd64.deb --location europe-north1
  release-external-repos:
    if: github.ref == 'refs/heads/main'
    needs: [release-github]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - repo: nais/nur
            file: pkgs/nais-cli.nix
          - repo: nais/scoop-bucket
            file: nais-cli.json
          - repo: nais/homebrew-tap
            file: Formula/nais.rb
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v5
      - uses: jdx/mise-action@v3
      - uses: navikt/github-app-token-generator@v1
        id: token
        with:
          private-key: "${{ secrets.NAIS_APP_PRIVATE_KEY }}"
          app-id: "${{ secrets.NAIS_APP_ID }}"
          repo: ${{ matrix.target.repo }}
      - uses: actions/download-artifact@v5
        with:
          name: template-vars
      - timeout-minutes: 1
        env:
          GH_TOKEN: ${{ steps.token.outputs.token }}
        run: mise run ci:create-package-manager-pr "${{ matrix.target.repo }}" "${{ matrix.target.file }}"

