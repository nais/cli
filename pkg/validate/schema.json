{
  "oneOf": [
    {
      "$schema": "http://json-schema.org/schema#",
      "additionalProperties": false,
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "enum": [
            "kafka.nais.io/v1"
          ],
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "enum": [
            "Topic"
          ],
          "type": "string"
        },
        "metadata": {
          "additionalProperties": false,
          "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create.",
          "properties": {
            "annotations": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
              "type": "object"
            },
            "creationTimestamp": {
              "additionalProperties": false,
              "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
              "type": "object"
            },
            "deletionGracePeriodSeconds": {
              "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.",
              "format": "int64",
              "type": "integer"
            },
            "deletionTimestamp": {
              "additionalProperties": false,
              "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
              "type": "object"
            },
            "finalizers": {
              "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "generateName": {
              "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
              "type": "string"
            },
            "generation": {
              "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.",
              "format": "int64",
              "type": "integer"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
              "properties": {
                "team": {
                  "type": "string"
                }
              },
              "required": [
                "team"
              ],
              "type": "object"
            },
            "managedFields": {
              "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.",
              "items": {
                "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to.",
                "properties": {
                  "apiVersion": {
                    "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted.",
                    "type": "string"
                  },
                  "fieldsType": {
                    "description": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\"",
                    "type": "string"
                  },
                  "fieldsV1": {
                    "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
                    "type": "object"
                  },
                  "manager": {
                    "description": "Manager is an identifier of the workflow managing these fields.",
                    "type": "string"
                  },
                  "operation": {
                    "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'.",
                    "type": "string"
                  },
                  "subresource": {
                    "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource.",
                    "type": "string"
                  },
                  "time": {
                    "description": "Time is the timestamp of when the ManagedFields entry was added. The\ntimestamp will also be updated if a field is added, the manager\nchanges any of the owned fields value or removes a field. The\ntimestamp does not update when a field is removed from the entry\nbecause another manager took it over.",
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array",
              "x-kubernetes-list-type": "atomic"
            },
            "name": {
              "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
              "type": "string"
            },
            "ownerReferences": {
              "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.",
              "items": {
                "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "blockOwnerDeletion": {
                    "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.",
                    "type": "boolean"
                  },
                  "controller": {
                    "description": "If true, this reference points to the managing controller.",
                    "type": "boolean"
                  },
                  "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                    "type": "string"
                  }
                },
                "required": [
                  "apiVersion",
                  "kind",
                  "name",
                  "uid"
                ],
                "type": "object",
                "x-kubernetes-map-type": "atomic"
              },
              "type": "array",
              "x-kubernetes-list-map-keys": [
                "uid"
              ],
              "x-kubernetes-list-type": "map"
            },
            "resourceVersion": {
              "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": "string"
            },
            "selfLink": {
              "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
              "type": "string"
            },
            "uid": {
              "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\n\nPopulated by the system.\nRead-only.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace",
            "labels"
          ],
          "type": "object"
        },
        "spec": {
          "additionalProperties": false,
          "description": "TopicSpec is a specification of the desired behavior of the topic.",
          "properties": {
            "acl": {
              "items": {
                "description": "TopicACL describes the access granted for the topic.",
                "properties": {
                  "access": {
                    "description": "Access type granted for a application.\nDefaults to `readwrite`.",
                    "enum": [
                      "read",
                      "write",
                      "readwrite"
                    ],
                    "type": "string"
                  },
                  "application": {
                    "description": "The name of the specified application",
                    "type": "string"
                  },
                  "team": {
                    "description": "The team of the specified application",
                    "type": "string"
                  }
                },
                "required": [
                  "access",
                  "application",
                  "team"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "config": {
              "additionalProperties": false,
              "properties": {
                "cleanupPolicy": {
                  "description": "CleanupPolicy is either \"delete\" or \"compact\" or both.\nThis designates the retention policy to use on old log segments.",
                  "enum": [
                    "delete",
                    "compact",
                    "compact,delete"
                  ],
                  "example": {
                    "Availability": "",
                    "Default": "delete",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://kafka.apache.org/33/documentation.html#topicconfigs_cleanup.policy"
                    ]
                  },
                  "type": "string"
                },
                "maxCompactionLagMs": {
                  "description": "MaxCompactionLagMs indicates the maximum time a message will remain ineligible for compaction in the log",
                  "example": {
                    "Availability": "",
                    "Default": "Inf",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://kafka.apache.org/33/documentation.html#topicconfigs_max.compaction.lag.ms"
                    ]
                  },
                  "minimum": 0,
                  "type": "integer"
                },
                "maxMessageBytes": {
                  "description": "The largest record batch size allowed by Kafka (after compression if compression is enabled).\nIf this is increased and there are consumers older than 0.10.2, the consumers' fetch size must also be increased\nso that they can fetch record batches this large. In the latest message format version, records are always grouped\ninto batches for efficiency. In previous message format versions, uncompressed records are not grouped into\nbatches and this limit only applies to a single record in that case.",
                  "example": {
                    "Availability": "",
                    "Default": "1048588",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://kafka.apache.org/33/documentation.html#topicconfigs_max.message.bytes"
                    ]
                  },
                  "maximum": 5242880,
                  "minimum": 1,
                  "type": "integer"
                },
                "minCleanableDirtyRatioPercent": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "MinCleanableDirtyRatio indicates the minimum ratio of dirty log to retention size to initiate log compaction",
                  "example": {
                    "Availability": "",
                    "Default": "50%",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://kafka.apache.org/33/documentation.html#topicconfigs_min.cleanable.dirty.ratio"
                    ]
                  },
                  "x-kubernetes-int-or-string": true
                },
                "minCompactionLagMs": {
                  "description": "MinCompactionLagMs indicates the minimum time a message will remain uncompacted in the log",
                  "example": {
                    "Availability": "",
                    "Default": "0",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://kafka.apache.org/33/documentation.html#topicconfigs_min.compaction.lag.ms"
                    ]
                  },
                  "minimum": 0,
                  "type": "integer"
                },
                "minimumInSyncReplicas": {
                  "description": "When a producer sets acks to \"all\" (or \"-1\"), `min.insync.replicas` specifies the minimum number of replicas\nthat must acknowledge a write for the write to be considered successful.",
                  "example": {
                    "Availability": "",
                    "Default": "2",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://kafka.apache.org/33/documentation.html#topicconfigs_min.insync.replicas"
                    ]
                  },
                  "maximum": 7,
                  "minimum": 1,
                  "type": "integer"
                },
                "partitions": {
                  "description": "The default number of log partitions per topic.",
                  "example": {
                    "Availability": "",
                    "Default": "1",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": null
                  },
                  "maximum": 1000000,
                  "minimum": 1,
                  "type": "integer"
                },
                "replication": {
                  "description": "The default replication factor for created topics.",
                  "example": {
                    "Availability": "",
                    "Default": "3",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://kafka.apache.org/33/documentation.html#replication"
                    ]
                  },
                  "minimum": 2,
                  "type": "integer"
                },
                "retentionBytes": {
                  "description": "Configuration controls the maximum size a partition can grow to before we will discard old log segments\nto free up space if we are using the \"delete\" retention policy. By default there is no size limit only a time limit.\nSince this limit is enforced at the partition level, multiply it by the number of partitions to compute the topic retention in bytes.",
                  "example": {
                    "Availability": "",
                    "Default": "-1",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://kafka.apache.org/33/documentation.html#topicconfigs_retention.bytes"
                    ]
                  },
                  "type": "integer"
                },
                "retentionHours": {
                  "description": "The number of hours to keep a log file before deleting it.",
                  "example": {
                    "Availability": "",
                    "Default": "168",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://kafka.apache.org/33/documentation.html#topicconfigs_retention.ms"
                    ]
                  },
                  "maximum": 2562047788015,
                  "type": "integer"
                },
                "segmentHours": {
                  "description": "The number of hours after which Kafka will force the log to roll even if the segment file isn't full to ensure\nthat retention can delete or compact old data.",
                  "example": {
                    "Availability": "",
                    "Default": "168",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://kafka.apache.org/33/documentation.html#topicconfigs_segment.ms"
                    ]
                  },
                  "maximum": 8760,
                  "minimum": 1,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "pool": {
              "type": "string"
            }
          },
          "required": [
            "acl",
            "pool"
          ],
          "type": "object"
        },
        "status": {
          "additionalProperties": false,
          "properties": {
            "credentialsExpiryTime": {
              "type": "string"
            },
            "errors": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "fullyQualifiedName": {
              "type": "string"
            },
            "latestAivenSyncFailure": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "synchronizationHash": {
              "type": "string"
            },
            "synchronizationState": {
              "type": "string"
            },
            "synchronizationTime": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "spec",
        "kind",
        "metadata",
        "apiVersion"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "kafka.nais.io",
          "kind": "Topic",
          "version": "kafka.nais.io/v1"
        }
      ]
    },
    {
      "$schema": "http://json-schema.org/schema#",
      "additionalProperties": false,
      "description": "Naisjob defines a NAIS Naisjob.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "enum": [
            "nais.io/v1"
          ],
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "enum": [
            "Naisjob"
          ],
          "type": "string"
        },
        "metadata": {
          "additionalProperties": false,
          "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create.",
          "properties": {
            "annotations": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
              "type": "object"
            },
            "creationTimestamp": {
              "additionalProperties": false,
              "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
              "type": "object"
            },
            "deletionGracePeriodSeconds": {
              "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.",
              "format": "int64",
              "type": "integer"
            },
            "deletionTimestamp": {
              "additionalProperties": false,
              "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
              "type": "object"
            },
            "finalizers": {
              "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "generateName": {
              "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
              "type": "string"
            },
            "generation": {
              "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.",
              "format": "int64",
              "type": "integer"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
              "properties": {
                "team": {
                  "type": "string"
                }
              },
              "required": [
                "team"
              ],
              "type": "object"
            },
            "managedFields": {
              "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.",
              "items": {
                "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to.",
                "properties": {
                  "apiVersion": {
                    "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted.",
                    "type": "string"
                  },
                  "fieldsType": {
                    "description": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\"",
                    "type": "string"
                  },
                  "fieldsV1": {
                    "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
                    "type": "object"
                  },
                  "manager": {
                    "description": "Manager is an identifier of the workflow managing these fields.",
                    "type": "string"
                  },
                  "operation": {
                    "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'.",
                    "type": "string"
                  },
                  "subresource": {
                    "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource.",
                    "type": "string"
                  },
                  "time": {
                    "description": "Time is the timestamp of when the ManagedFields entry was added. The\ntimestamp will also be updated if a field is added, the manager\nchanges any of the owned fields value or removes a field. The\ntimestamp does not update when a field is removed from the entry\nbecause another manager took it over.",
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array",
              "x-kubernetes-list-type": "atomic"
            },
            "name": {
              "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
              "type": "string"
            },
            "ownerReferences": {
              "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.",
              "items": {
                "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "blockOwnerDeletion": {
                    "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.",
                    "type": "boolean"
                  },
                  "controller": {
                    "description": "If true, this reference points to the managing controller.",
                    "type": "boolean"
                  },
                  "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                    "type": "string"
                  }
                },
                "required": [
                  "apiVersion",
                  "kind",
                  "name",
                  "uid"
                ],
                "type": "object",
                "x-kubernetes-map-type": "atomic"
              },
              "type": "array",
              "x-kubernetes-list-map-keys": [
                "uid"
              ],
              "x-kubernetes-list-type": "map"
            },
            "resourceVersion": {
              "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": "string"
            },
            "selfLink": {
              "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
              "type": "string"
            },
            "uid": {
              "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\n\nPopulated by the system.\nRead-only.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace",
            "labels"
          ],
          "type": "object"
        },
        "spec": {
          "additionalProperties": false,
          "description": "NaisjobSpec contains the NAIS manifest.\nPlease keep this list sorted for clarity.",
          "properties": {
            "accessPolicy": {
              "additionalProperties": false,
              "description": "By default, no traffic is allowed between naisjobs inside the cluster.\nConfigure access policies to explicitly allow communication between naisjobs.\nThis is also used for granting inbound access in the context of Azure AD and TokenX clients.",
              "example": {
                "Availability": "",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://doc.nais.io/workloads/explanations/zero-trust/"
                ]
              },
              "properties": {
                "inbound": {
                  "additionalProperties": false,
                  "description": "Configures inbound access for your application.",
                  "properties": {
                    "rules": {
                      "description": "List of NAIS applications that may access your application.\nThese settings apply both to Zero Trust network connectivity and token validity for Azure AD and TokenX tokens.",
                      "items": {
                        "properties": {
                          "application": {
                            "description": "The application's name.",
                            "type": "string"
                          },
                          "cluster": {
                            "description": "The application's cluster. May be omitted if it should be in the same cluster as your application.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "The application's namespace. May be omitted if it should be in the same namespace as your application.",
                            "type": "string"
                          },
                          "permissions": {
                            "description": "Permissions contains a set of permissions that are granted to the given application.\nCurrently only applicable for Azure AD clients.",
                            "example": {
                              "Availability": "",
                              "Default": "",
                              "Deprecated": false,
                              "Experimental": false,
                              "Hidden": false,
                              "Immutable": false,
                              "Link": [
                                "https://doc.nais.io/security/auth/azure-ad/configuration#fine-grained-access-control"
                              ]
                            },
                            "properties": {
                              "roles": {
                                "description": "Roles is a set of custom permission roles that are granted to a given application.",
                                "example": {
                                  "Availability": "",
                                  "Default": "",
                                  "Deprecated": false,
                                  "Experimental": false,
                                  "Hidden": false,
                                  "Immutable": false,
                                  "Link": [
                                    "https://doc.nais.io/security/auth/azure-ad/configuration#custom-roles"
                                  ]
                                },
                                "items": {
                                  "pattern": "^[a-z0-9-_./]+$",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "scopes": {
                                "description": "Scopes is a set of custom permission scopes that are granted to a given application.",
                                "example": {
                                  "Availability": "",
                                  "Default": "",
                                  "Deprecated": false,
                                  "Experimental": false,
                                  "Hidden": false,
                                  "Immutable": false,
                                  "Link": [
                                    "https://doc.nais.io/security/auth/azure-ad/configuration#custom-scopes"
                                  ]
                                },
                                "items": {
                                  "pattern": "^[a-z0-9-_./]+$",
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "required": [
                          "application"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "rules"
                  ],
                  "type": "object"
                },
                "outbound": {
                  "additionalProperties": false,
                  "description": "Configures outbound access for your application.",
                  "properties": {
                    "external": {
                      "description": "List of external resources that your applications should be able to reach.",
                      "example": {
                        "Availability": "GCP",
                        "Default": "",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": null
                      },
                      "items": {
                        "properties": {
                          "host": {
                            "description": "The _host_ that your application should be able to reach, i.e. without the protocol (e.g. `https://`). \"Host\" and \"IPv4\" are mutually exclusive",
                            "pattern": "^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])(\\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]))*$",
                            "type": "string"
                          },
                          "ipv4": {
                            "description": "The IPv4 address that your application should be able to reach. \"IPv4\" and \"Host\" are mutually exclusive",
                            "pattern": "^(([0-9])|([1-9][0-9])|(1([0-9]{2}))|(2[0-4][0-9])|(25[0-5]))((\\.(([0-9])|([1-9][0-9])|(1([0-9]{2}))|(2[0-4][0-9])|(25[0-5]))){3})$",
                            "type": "string"
                          },
                          "ports": {
                            "description": "List of port rules for external communication. Must be specified if using protocols other than HTTPS.",
                            "items": {
                              "properties": {
                                "port": {
                                  "description": "The port used for communication.",
                                  "format": "int32",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "port"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "rules": {
                      "description": "List of NAIS applications that your application needs to access.\nThese settings apply to Zero Trust network connectivity.",
                      "items": {
                        "properties": {
                          "application": {
                            "description": "The application's name.",
                            "type": "string"
                          },
                          "cluster": {
                            "description": "The application's cluster. May be omitted if it should be in the same cluster as your application.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "The application's namespace. May be omitted if it should be in the same namespace as your application.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "application"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "activeDeadlineSeconds": {
              "description": "Once a Naisjob reaches activeDeadlineSeconds, all of its running Pods are terminated and the Naisjob status will become type: Failed with reason: DeadlineExceeded.\nIf set, this takes presedence over BackoffLimit.",
              "format": "int64",
              "type": "integer"
            },
            "azure": {
              "additionalProperties": false,
              "description": "Provisions and configures Azure resources.",
              "properties": {
                "application": {
                  "additionalProperties": false,
                  "description": "Configures an Entra ID client for this application.",
                  "example": {
                    "Availability": "",
                    "Default": "",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://doc.nais.io/auth/entra-id/"
                    ]
                  },
                  "properties": {
                    "allowAllUsers": {
                      "description": "AllowAllUsers grants all users within the tenant access to this application.",
                      "example": {
                        "Availability": "",
                        "Default": "false",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": [
                          "https://doc.nais.io/auth/entra-id/how-to/secure/#all-users"
                        ]
                      },
                      "type": "boolean"
                    },
                    "claims": {
                      "additionalProperties": false,
                      "description": "Claims defines additional configuration of the emitted claims in tokens returned to the Azure AD application.",
                      "properties": {
                        "extra": {
                          "description": "Deprecated, do not use.",
                          "example": {
                            "Availability": "",
                            "Default": "",
                            "Deprecated": true,
                            "Experimental": false,
                            "Hidden": true,
                            "Immutable": false,
                            "Link": null
                          },
                          "items": {
                            "enum": [
                              "NAVident",
                              "azp_name"
                            ],
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "groups": {
                          "description": "Groups is a list of Azure AD group IDs to be emitted in the `groups` claim in tokens issued by Azure AD.\nThis also assigns groups to the application for access control. Only direct members of the groups are granted access.",
                          "example": {
                            "Availability": "",
                            "Default": "",
                            "Deprecated": false,
                            "Experimental": false,
                            "Hidden": false,
                            "Immutable": false,
                            "Link": [
                              "https://doc.nais.io/security/auth/azure-ad/configuration/#groups"
                            ]
                          },
                          "items": {
                            "properties": {
                              "id": {
                                "description": "ID is the actual `object ID` associated with the given group in Azure AD.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "enabled": {
                      "description": "If enabled, provisions an Entra ID application.",
                      "type": "boolean"
                    },
                    "replyURLs": {
                      "description": "Deprecated. Only use if you're implementing logins _without_ using sidecar.",
                      "example": {
                        "Availability": "",
                        "Default": "",
                        "Deprecated": true,
                        "Experimental": false,
                        "Hidden": true,
                        "Immutable": false,
                        "Link": null
                      },
                      "items": {
                        "pattern": "^https?:\\/\\/.+$",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "singlePageApplication": {
                      "description": "Deprecated, do not use.",
                      "example": {
                        "Availability": "",
                        "Default": "",
                        "Deprecated": true,
                        "Experimental": false,
                        "Hidden": true,
                        "Immutable": false,
                        "Link": null
                      },
                      "type": "boolean"
                    },
                    "tenant": {
                      "description": "Tenant targets a specific tenant for the Entra ID application.\nOnly works in the development clusters. Only use this if you have a specific reason to do so.\nUsing this will _isolate_ your application from all other applications that are not using the same tenant.",
                      "enum": [
                        "nav.no",
                        "trygdeetaten.no"
                      ],
                      "example": {
                        "Availability": "",
                        "Default": "",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": [
                          "https://doc.nais.io/auth/entra-id/explanations/#tenants"
                        ]
                      },
                      "type": "string"
                    }
                  },
                  "required": [
                    "enabled"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "application"
              ],
              "type": "object"
            },
            "backoffLimit": {
              "description": "Specify the number of retries before considering a Naisjob as failed",
              "format": "int32",
              "type": "integer"
            },
            "command": {
              "description": "Override command when starting Docker image.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "completions": {
              "description": "A Job tracks the successful completions. When a specified number of successful completions is reached, the task (ie, Job) is complete.",
              "example": {
                "Availability": "",
                "Default": "1",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://kubernetes.io/docs/concepts/workloads/controllers/job/#job-patterns"
                ]
              },
              "format": "int32",
              "type": "integer"
            },
            "concurrencyPolicy": {
              "description": "Specifies how to treat concurrent executions of a job that is created by this Naisjob-cron.",
              "enum": [
                "Forbid",
                "Replace",
                "Allow"
              ],
              "example": {
                "Availability": "",
                "Default": "Allow",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://kubernetes.io/docs/tasks/job/automated-tasks-with-cron-jobs/#concurrency-policy"
                ]
              },
              "type": "string"
            },
            "env": {
              "description": "Custom environment variables injected into your container.\nSpecify either `value` or `valueFrom`, but not both.",
              "items": {
                "properties": {
                  "name": {
                    "description": "Environment variable name. May only contain letters, digits, and the underscore `_` character.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Environment variable value. Numbers and boolean values must be quoted.\nRequired unless `valueFrom` is specified.",
                    "type": "string"
                  },
                  "valueFrom": {
                    "description": "Dynamically set environment variables based on fields found in the Pod spec.",
                    "example": {
                      "Availability": "",
                      "Default": "",
                      "Deprecated": false,
                      "Experimental": false,
                      "Hidden": false,
                      "Immutable": false,
                      "Link": [
                        "https://kubernetes.io/docs/tasks/inject-data-application/environment-variable-expose-pod-information/"
                      ]
                    },
                    "properties": {
                      "fieldRef": {
                        "properties": {
                          "fieldPath": {
                            "description": "Field value from the `Pod` spec that should be copied into the environment variable.",
                            "enum": [
                              "",
                              "metadata.name",
                              "metadata.namespace",
                              "metadata.labels",
                              "metadata.annotations",
                              "spec.nodeName",
                              "spec.serviceAccountName",
                              "status.hostIP",
                              "status.podIP"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "fieldPath"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "fieldRef"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "envFrom": {
              "description": "EnvFrom exposes all variables in the ConfigMap or Secret resources as environment variables.\nOne of `configMap` or `secret` is required.\n\n\nEnvironment variables will take the form `KEY=VALUE`, where `key` is the ConfigMap or Secret key.\nYou can specify as many keys as you like in a single ConfigMap or Secret.\n\n\nThe ConfigMap and Secret resources must live in the same Kubernetes namespace as the Naisjob resource.",
              "example": {
                "Availability": "team namespaces",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": null
              },
              "items": {
                "properties": {
                  "configmap": {
                    "description": "Name of the `ConfigMap` where environment variables are specified.\nRequired unless `secret` is set.",
                    "type": "string"
                  },
                  "secret": {
                    "description": "Name of the `Secret` where environment variables are specified.\nRequired unless `configMap` is set.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "failedJobsHistoryLimit": {
              "description": "Specify how many failed Jobs should be kept.",
              "format": "int32",
              "type": "integer"
            },
            "filesFrom": {
              "description": "List of ConfigMap or Secret resources that will have their contents mounted into the containers as files.\nEither `configMap` or `secret` is required.\n\n\nFiles will take the path `\u003cmountPath\u003e/\u003ckey\u003e`, where `key` is the ConfigMap or Secret key.\nYou can specify as many keys as you like in a single ConfigMap or Secret, and they will all\nbe mounted to the same directory.\n\n\nThe ConfigMap and Secret resources must live in the same Kubernetes namespace as the Naisjob resource.",
              "example": {
                "Availability": "team namespaces",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": null
              },
              "items": {
                "properties": {
                  "configmap": {
                    "description": "Name of the `ConfigMap` that contains files that should be mounted into the container.\nRequired unless `secret` or `persistentVolumeClaim` is set.",
                    "type": "string"
                  },
                  "emptyDir": {
                    "description": "Specification of an empty directory",
                    "properties": {
                      "medium": {
                        "enum": [
                          "Memory",
                          "Disk"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "mountPath": {
                    "description": "Filesystem path inside the pod where files are mounted.\nThe directory will be created if it does not exist. If the directory exists,\nany files in the directory will be made unaccessible.\n\n\nDefaults to `/var/run/configmaps/\u003cNAME\u003e`, `/var/run/secrets`, or `/var/run/pvc/\u003cNAME\u003e`, depending on which of them is specified.\nFor EmptyDir, MountPath must be set.",
                    "type": "string"
                  },
                  "persistentVolumeClaim": {
                    "description": "Name of the `PersistentVolumeClaim` that should be mounted into the container.\nRequired unless `configMap` or `secret` is set.\nThis feature requires coordination with the NAIS team.",
                    "type": "string"
                  },
                  "secret": {
                    "description": "Name of the `Secret` that contains files that should be mounted into the container.\nRequired unless `configMap` or `persistentVolumeClaim` is set.\nIf mounting multiple secrets, `mountPath` *MUST* be set to avoid collisions.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "gcp": {
              "additionalProperties": false,
              "example": {
                "Availability": "GCP",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": null
              },
              "properties": {
                "bigQueryDatasets": {
                  "description": "Provision BigQuery datasets and give your application's pod mountable secrets for connecting to each dataset.\nDatasets are immutable and cannot be changed.",
                  "example": {
                    "Availability": "GCP",
                    "Default": "",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://cloud.google.com/bigquery/docs"
                    ]
                  },
                  "items": {
                    "properties": {
                      "cascadingDelete": {
                        "description": "When set to true will delete the dataset, when the application resource is deleted.\nNB: If no tables exist in the bigquery dataset, it _will_ delete the dataset even if this value is set/defaulted to `false`.\nDefault value is `false`.",
                        "example": {
                          "Availability": "",
                          "Default": "",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": true,
                          "Link": null
                        },
                        "type": "boolean"
                      },
                      "description": {
                        "description": "Human-readable description of what this BigQuery dataset contains, or is used for.\nWill be visible in the GCP Console.",
                        "example": {
                          "Availability": "",
                          "Default": "",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": true,
                          "Link": null
                        },
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the BigQuery Dataset.\nThe canonical name of the dataset will be `\u003cTEAM_PROJECT_ID\u003e:\u003cNAME\u003e`.",
                        "example": {
                          "Availability": "",
                          "Default": "",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": true,
                          "Link": null
                        },
                        "pattern": "^[a-z0-9][a-z0-9_]+$",
                        "type": "string"
                      },
                      "permission": {
                        "description": "Permission level given to application.",
                        "enum": [
                          "READ",
                          "READWRITE"
                        ],
                        "example": {
                          "Availability": "",
                          "Default": "",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": true,
                          "Link": null
                        },
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "permission"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "buckets": {
                  "description": "Provision cloud storage buckets and connect them to your application.",
                  "example": {
                    "Availability": "GCP",
                    "Default": "",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://doc.nais.io/persistence/buckets/"
                    ]
                  },
                  "items": {
                    "properties": {
                      "cascadingDelete": {
                        "description": "Allows deletion of bucket. Set to true if you want to delete the bucket.",
                        "type": "boolean"
                      },
                      "lifecycleCondition": {
                        "description": "Conditions for the bucket to use when selecting objects to delete in cleanup.",
                        "example": {
                          "Availability": "",
                          "Default": "",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": [
                            "https://cloud.google.com/storage/docs/lifecycle"
                          ]
                        },
                        "properties": {
                          "age": {
                            "description": "Condition is satisfied when the object reaches the specified age in days. These will be deleted.",
                            "type": "integer"
                          },
                          "createdBefore": {
                            "description": "Condition is satisfied when the object is created before midnight on the specified date. These will be deleted.",
                            "type": "string"
                          },
                          "numNewerVersions": {
                            "description": "Condition is satisfied when the object has the specified number of newer versions.\nThe older versions will be deleted.",
                            "type": "integer"
                          },
                          "withState": {
                            "description": "Condition is satisfied when the object has the specified state.",
                            "enum": [
                              "",
                              "LIVE",
                              "ARCHIVED",
                              "ANY"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "name": {
                        "description": "The name of the bucket",
                        "type": "string"
                      },
                      "publicAccessPrevention": {
                        "description": "Public access prevention allows you to prevent public access to your bucket.",
                        "example": {
                          "Availability": "",
                          "Default": "false",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": [
                            "https://cloud.google.com/storage/docs/public-access-prevention"
                          ]
                        },
                        "type": "boolean"
                      },
                      "retentionPeriodDays": {
                        "description": "The number of days to hold objects in the bucket before it is allowed to delete them.",
                        "maximum": 36500,
                        "minimum": 1,
                        "type": "integer"
                      },
                      "uniformBucketLevelAccess": {
                        "description": "Allows you to uniformly control access to your Cloud Storage resources.\nWhen you enable uniform bucket-level access on a bucket, Access Control Lists (ACLs) are disabled, and only bucket-level Identity\nand Access Management (IAM) permissions grant access to that bucket and the objects it contains.\n\n\nUniform access control can not be reversed after 90 days! This is controlled by Google.",
                        "example": {
                          "Availability": "",
                          "Default": "false",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": [
                            "https://cloud.google.com/storage/docs/uniform-bucket-level-access"
                          ]
                        },
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "permissions": {
                  "description": "List of _additional_ permissions that should be granted to your application for accessing external GCP resources that have not been provisioned through NAIS.",
                  "example": {
                    "Availability": "GCP",
                    "Default": "",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": null
                  },
                  "items": {
                    "properties": {
                      "resource": {
                        "description": "IAM resource to bind the role to.",
                        "properties": {
                          "apiVersion": {
                            "description": "Kubernetes _APIVersion_.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kubernetes _Kind_.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Kubernetes _Name_.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "apiVersion",
                          "kind"
                        ],
                        "type": "object"
                      },
                      "role": {
                        "description": "Name of the GCP role to bind the resource to.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "resource",
                      "role"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "sqlInstances": {
                  "description": "Provision database instances and connect them to your application.",
                  "example": {
                    "Availability": "GCP",
                    "Default": "",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://doc.nais.io/persistence/postgres/",
                      "https://cloud.google.com/sql/docs/postgres/instance-settings#impact"
                    ]
                  },
                  "items": {
                    "properties": {
                      "autoBackupHour": {
                        "description": "If specified, run automatic backups of the SQL database at the given hour.\nNote that this will backup the whole SQL instance, and not separate databases.\nRestores are done using the Google Cloud Console.",
                        "maximum": 23,
                        "minimum": 0,
                        "type": "integer"
                      },
                      "cascadingDelete": {
                        "description": "Remove the entire Postgres server including all data when the Kubernetes resource is deleted.\n*THIS IS A DESTRUCTIVE OPERATION*! Set cascading delete only when you want to remove data forever.",
                        "type": "boolean"
                      },
                      "collation": {
                        "description": "Sort order for `ORDER BY ...` clauses.",
                        "type": "string"
                      },
                      "databases": {
                        "description": "List of databases that should be created on this Postgres server.",
                        "items": {
                          "properties": {
                            "envVarPrefix": {
                              "description": "Prefix to add to environment variables made available for database connection.\nIf switching to `EnvVarPrefix` you need to [reset database credentials](https://doc.nais.io/persistence/postgres/#reset-database-credentials).",
                              "type": "string"
                            },
                            "name": {
                              "description": "Database name.\n*Be aware that only one database with this name is allowed in a namespace, regardless of which SQLInstance it belongs to*",
                              "type": "string"
                            },
                            "users": {
                              "description": "Add extra users for database access. These users need to be manually given access to database tables.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "description": "User name.",
                                    "pattern": "^[_a-zA-Z][-_a-zA-Z0-9]+$",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object"
                        },
                        "maxItems": 1,
                        "type": "array"
                      },
                      "diskAutoresize": {
                        "description": "When set to true, GCP will automatically increase storage by XXX for the database when\ndisk usage is above the high water mark. Setting this field to true also disables\nmanual control over disk size, i.e. the `diskSize` parameter will be ignored.",
                        "example": {
                          "Availability": "",
                          "Default": "",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": [
                            "https://cloud.google.com/sql/docs/postgres/instance-settings#threshold"
                          ]
                        },
                        "type": "boolean"
                      },
                      "diskAutoresizeLimit": {
                        "description": "The maximum size, in GB, to which storage capacity can be automatically increased.\nThe default value is 0, which specifies that there is no limit.",
                        "example": {
                          "Availability": "",
                          "Default": "0",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": null
                        },
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer"
                      },
                      "diskSize": {
                        "description": "How much hard drive space to allocate for the SQL server, in gigabytes.\nThis parameter is used when first provisioning a server.\nDisk size can be changed using this field _only when diskAutoresize is set to false_.",
                        "minimum": 10,
                        "type": "integer"
                      },
                      "diskType": {
                        "description": "Disk type to use for storage in the database.",
                        "enum": [
                          "SSD",
                          "HDD"
                        ],
                        "type": "string"
                      },
                      "flags": {
                        "description": "Set flags to control the behavior of the instance.\nBe aware that NAIS _does not validate_ these flags, so take extra care\nto make sure the values match against the specification, otherwise your deployment\nwill seemingly work OK, but the database flags will not function as expected.",
                        "example": {
                          "Availability": "",
                          "Default": "",
                          "Deprecated": false,
                          "Experimental": true,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": [
                            "https://cloud.google.com/sql/docs/postgres/flags#list-flags-postgres"
                          ]
                        },
                        "items": {
                          "properties": {
                            "name": {
                              "description": "Name of the flag.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Value of the flag.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "value"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "highAvailability": {
                        "description": "When set to true this will set up standby database for failover.",
                        "type": "boolean"
                      },
                      "insights": {
                        "description": "Configures query insights which are now default for new sql instances.",
                        "properties": {
                          "enabled": {
                            "description": "True if Query Insights feature is enabled.",
                            "example": {
                              "Availability": "",
                              "Default": "true",
                              "Deprecated": false,
                              "Experimental": false,
                              "Hidden": false,
                              "Immutable": false,
                              "Link": null
                            },
                            "type": "boolean"
                          },
                          "queryStringLength": {
                            "description": "Maximum query length stored in bytes. Between 256 and 4500. Default to 1024.",
                            "maximum": 4500,
                            "minimum": 256,
                            "type": "integer"
                          },
                          "recordApplicationTags": {
                            "description": "True if Query Insights will record application tags from query when enabled.",
                            "type": "boolean"
                          },
                          "recordClientAddress": {
                            "description": "True if Query Insights will record client address when enabled.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "maintenance": {
                        "description": "Desired maintenance window for database updates.",
                        "properties": {
                          "day": {
                            "maximum": 7,
                            "minimum": 1,
                            "type": "integer"
                          },
                          "hour": {
                            "maximum": 23,
                            "minimum": 0,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "name": {
                        "description": "The name of the instance, if omitted the application name will be used.",
                        "type": "string"
                      },
                      "pointInTimeRecovery": {
                        "description": "Enables point-in-time recovery for sql instances using write-ahead logs.",
                        "type": "boolean"
                      },
                      "retainedBackups": {
                        "description": "Number of daily backups to retain. Defaults to 7 backups.\nThe number of retained backups must be greater or equal to TransactionLogRetentionDays.",
                        "example": {
                          "Availability": "",
                          "Default": "7",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": [
                            "https://cloud.google.com/sql/docs/postgres/backup-recovery/backups"
                          ]
                        },
                        "maximum": 365,
                        "minimum": 1,
                        "type": "integer"
                      },
                      "tier": {
                        "description": "Server tier, i.e. how much CPU and memory allocated.\nAvailable tiers are `db-f1-micro`, `db-g1-small` and custom `db-custom-CPU-RAM`.\nCustom instances must specify memory as a multiple of 256 MB and at least 3.75 GB (e.g. `db-custom-1-3840` for 1 cpu, 3840 MB ram).\nThe smallest possible instance is `db-f1-micro`, which is recommended only for development instances.\nFor production workloads, please specify at least `db-custom-1-3840`.",
                        "pattern": "db-.+",
                        "type": "string"
                      },
                      "transactionLogRetentionDays": {
                        "description": "The number of days of transaction logs gcp retains for point in time restores.",
                        "example": {
                          "Availability": "",
                          "Default": "7",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": [
                            "https://cloud.google.com/sql/docs/mysql/backup-recovery/backups#retention"
                          ]
                        },
                        "maximum": 7,
                        "minimum": 1,
                        "type": "integer"
                      },
                      "type": {
                        "description": "PostgreSQL version.",
                        "enum": [
                          "POSTGRES_11",
                          "POSTGRES_12",
                          "POSTGRES_13",
                          "POSTGRES_14",
                          "POSTGRES_15",
                          "POSTGRES_16"
                        ],
                        "example": {
                          "Availability": "",
                          "Default": "",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": [
                            "https://cloud.google.com/sql/docs/postgres/instance-settings"
                          ]
                        },
                        "type": "string"
                      }
                    },
                    "required": [
                      "tier",
                      "type"
                    ],
                    "type": "object"
                  },
                  "maxItems": 1,
                  "type": "array"
                }
              },
              "type": "object"
            },
            "image": {
              "description": "Your Naisjob's Docker image location and tag.",
              "type": "string"
            },
            "influx": {
              "additionalProperties": false,
              "description": "An Influxdb via Aiven. A typical use case is to store metrics from your application and visualize them in Grafana.\nSee [navikt/aiven-iac](https://github.com/navikt/aiven-iac) repository",
              "example": {
                "Availability": "GCP",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": null
              },
              "properties": {
                "instance": {
                  "description": "Provisions an InfluxDB instance and configures your application to access it.\nUse the prefix: `influx-` + `team` that you specified in the [navikt/aiven-iac](https://github.com/navikt/aiven-iac) repository.",
                  "type": "string"
                }
              },
              "required": [
                "instance"
              ],
              "type": "object"
            },
            "kafka": {
              "additionalProperties": false,
              "description": "Enable Aiven Kafka for your Naisjob.",
              "properties": {
                "pool": {
                  "description": "Configures your application to access an Aiven Kafka cluster.",
                  "type": "string"
                },
                "streams": {
                  "description": "Allow this app to use kafka streams",
                  "example": {
                    "Availability": "GCP",
                    "Default": "false",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://doc.nais.io/persistence/kafka/how-to/internal"
                    ]
                  },
                  "type": "boolean"
                }
              },
              "required": [
                "pool"
              ],
              "type": "object"
            },
            "liveness": {
              "additionalProperties": false,
              "description": "Many Naisjobs running for long periods of time eventually transition to broken states,\nand cannot recover except by being restarted. Kubernetes provides liveness probes to detect\nand remedy such situations. Read more about this over at the\n[Kubernetes probes documentation](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/).",
              "properties": {
                "failureThreshold": {
                  "description": "When a Pod starts, and the probe fails, Kubernetes will try _failureThreshold_ times before giving up.\nGiving up in case of a startup probe means restarting the Pod.",
                  "type": "integer"
                },
                "initialDelay": {
                  "description": "Number of seconds after the container has started before startup probes are initiated.",
                  "type": "integer"
                },
                "path": {
                  "description": "HTTP endpoint path that signals 200 OK if the application has started successfully.",
                  "type": "string"
                },
                "periodSeconds": {
                  "description": "How often (in seconds) to perform the probe.",
                  "type": "integer"
                },
                "port": {
                  "description": "Port for the startup probe.",
                  "type": "integer"
                },
                "timeout": {
                  "description": "Number of seconds after which the probe times out.",
                  "type": "integer"
                }
              },
              "required": [
                "path"
              ],
              "type": "object"
            },
            "logformat": {
              "description": "Format of the logs from the container. Use this if the container doesn't support\nJSON logging and the log is in a special format that need to be parsed.",
              "enum": [
                "",
                "accesslog",
                "accesslog_with_processing_time",
                "accesslog_with_referer_useragent",
                "capnslog",
                "logrus",
                "gokit",
                "redis",
                "glog",
                "simple",
                "influxdb",
                "log15"
              ],
              "type": "string"
            },
            "logtransform": {
              "description": "Extra filters for modifying log content. This can e.g. be used for setting loglevel based on http status code.",
              "enum": [
                "http_loglevel",
                "dns_loglevel"
              ],
              "type": "string"
            },
            "maskinporten": {
              "additionalProperties": false,
              "description": "Configures a Maskinporten client for this Naisjob.\nSee [Maskinporten](https://doc.nais.io/security/auth/maskinporten/) for more details.",
              "properties": {
                "enabled": {
                  "description": "If enabled, provisions and configures a Maskinporten client with consumed scopes and/or Exposed scopes with DigDir.",
                  "example": {
                    "Availability": "team namespaces",
                    "Default": "false",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": null
                  },
                  "type": "boolean"
                },
                "scopes": {
                  "additionalProperties": false,
                  "description": "Schema to configure Maskinporten clients with consumed scopes and/or exposed scopes.",
                  "properties": {
                    "consumes": {
                      "description": "This is the Schema for the consumes and exposes API.\n`consumes` is a list of scopes that your client can request access to.",
                      "items": {
                        "properties": {
                          "name": {
                            "description": "The scope consumed by the application to gain access to an external organization API.\nEnsure that the NAV organization has been granted access to the scope prior to requesting access.",
                            "example": {
                              "Availability": "",
                              "Default": "",
                              "Deprecated": false,
                              "Experimental": false,
                              "Hidden": false,
                              "Immutable": false,
                              "Link": [
                                "https://doc.nais.io/security/auth/maskinporten/#consume-scopes"
                              ]
                            },
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "exposes": {
                      "description": "`exposes` is a list of scopes your application want to expose to other organization where access to the scope is based on organization number.",
                      "items": {
                        "properties": {
                          "accessibleForAll": {
                            "description": "Allow any organization to access the scope.",
                            "example": {
                              "Availability": "",
                              "Default": "false",
                              "Deprecated": false,
                              "Experimental": false,
                              "Hidden": false,
                              "Immutable": false,
                              "Link": null
                            },
                            "type": "boolean"
                          },
                          "allowedIntegrations": {
                            "description": "Whitelisting of integration's allowed.\nDefault is `maskinporten`",
                            "example": {
                              "Availability": "",
                              "Default": "maskinporten",
                              "Deprecated": false,
                              "Experimental": false,
                              "Hidden": false,
                              "Immutable": false,
                              "Link": [
                                "https://docs.digdir.no/maskinporten_guide_apitilbyder.html#scope-begrensninger"
                              ]
                            },
                            "items": {
                              "type": "string"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "atMaxAge": {
                            "description": "Max time in seconds for a issued access_token.\nDefault is `30` sec.",
                            "example": {
                              "Availability": "",
                              "Default": "30",
                              "Deprecated": false,
                              "Experimental": false,
                              "Hidden": false,
                              "Immutable": false,
                              "Link": null
                            },
                            "maximum": 680,
                            "minimum": 30,
                            "type": "integer"
                          },
                          "consumers": {
                            "description": "External consumers granted access to this scope and able to request access_token.",
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "This is a describing field intended for clarity not used for any other purpose.",
                                  "type": "string"
                                },
                                "orgno": {
                                  "description": "The external business/organization number.",
                                  "pattern": "^\\d{9}$",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "orgno"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "delegationSource": {
                            "description": "Delegation source for the scope. Default is empty, which means no delegation is allowed.",
                            "enum": [
                              "altinn"
                            ],
                            "example": {
                              "Availability": "",
                              "Default": "",
                              "Deprecated": false,
                              "Experimental": false,
                              "Hidden": false,
                              "Immutable": false,
                              "Link": [
                                "https://docs.digdir.no/docs/Maskinporten/maskinporten_func_delegering"
                              ]
                            },
                            "type": "string"
                          },
                          "enabled": {
                            "description": "If Enabled the configured scope is available to be used and consumed by organizations granted access.",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The actual subscope combined with `Product`.\nEnsure that `\u003cProduct\u003e\u003cName\u003e` matches `Pattern`.",
                            "example": {
                              "Availability": "",
                              "Default": "false",
                              "Deprecated": false,
                              "Experimental": false,
                              "Hidden": false,
                              "Immutable": false,
                              "Link": null
                            },
                            "pattern": "^([a-zæøå0-9]+\\/?)+(\\:[a-zæøå0-9]+)*[a-zæøå0-9]+(\\.[a-zæøå0-9]+)*$",
                            "type": "string"
                          },
                          "product": {
                            "description": "The product-area your application belongs to e.g. arbeid, helse ...\nThis will be included in the final scope `nav:\u003cProduct\u003e\u003cName\u003e`.",
                            "pattern": "^[a-z0-9]+$",
                            "type": "string"
                          },
                          "separator": {
                            "description": "Separator is the character that separates `product` and `name` in the final scope:\n`scope := \u003cprefix\u003e:\u003cproduct\u003e\u003cseparator\u003e\u003cname\u003e`\nThis overrides the default separator.\nThe default separator is `:`. If `name` contains `/`, the default separator is instead `/`.",
                            "maxLength": 1,
                            "minLength": 1,
                            "pattern": "^[\\/:]$",
                            "type": "string"
                          }
                        },
                        "required": [
                          "enabled",
                          "name",
                          "product"
                        ],
                        "type": "object",
                        "x-kubernetes-validations": [
                          {
                            "message": "scopes.exposes[].separator must be set to \"/\" when scopes.exposes[].delegationSource is set",
                            "rule": "!has(self.delegationSource) || (has(self.separator) \u0026\u0026 self.separator == \"/\")"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "enabled"
              ],
              "type": "object"
            },
            "observability": {
              "additionalProperties": false,
              "description": "Configuration options related to application observability.",
              "example": {
                "Availability": "",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://doc.nais.io/observability/"
                ]
              },
              "properties": {
                "autoInstrumentation": {
                  "additionalProperties": false,
                  "description": "Auto-instrumentiation for your application using OpenTelemetry for collecting telemetry data such as traces, metrics and logs.",
                  "example": {
                    "Availability": "",
                    "Default": "",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://doc.nais.io/observability/auto-instrumentation/"
                    ]
                  },
                  "properties": {
                    "destinations": {
                      "description": "Destinations are where telemetry data should be stored.",
                      "example": {
                        "Availability": "",
                        "Default": "",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": [
                          "https://doc.nais.io/observability/reference/auto-config/#destinations"
                        ]
                      },
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Destination ID.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "enabled": {
                      "description": "Enable automatic instrumentation of your application using OpenTelemetry Agent.",
                      "type": "boolean"
                    },
                    "runtime": {
                      "description": "Application runtime. Supported runtimes are `java`, `nodejs`, `python`, `sdk`.",
                      "enum": [
                        "java",
                        "nodejs",
                        "python",
                        "sdk"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "logging": {
                  "additionalProperties": false,
                  "description": "Configure logging for your application.",
                  "example": {
                    "Availability": "",
                    "Default": "",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://doc.nais.io/observability/logging/"
                    ]
                  },
                  "properties": {
                    "destinations": {
                      "description": "Log destinations for where to forward application logs for persistent storage. Leave empty to use default destinations.",
                      "example": {
                        "Availability": "",
                        "Default": "",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": [
                          "https://doc.nais.io/observability/logging/#log-destinations"
                        ]
                      },
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "enabled": {
                      "default": true,
                      "description": "Enable forwarding of application logs to persistent storage.",
                      "example": {
                        "Availability": "",
                        "Default": "true",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": null
                      },
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "tracing": {
                  "additionalProperties": false,
                  "description": "Enable application performance monitoring with traces collected using OpenTelemetry and the OTLP exporter.\nDeprecated. Use AutoInstrumentation instead.",
                  "example": {
                    "Availability": "",
                    "Default": "",
                    "Deprecated": true,
                    "Experimental": false,
                    "Hidden": true,
                    "Immutable": false,
                    "Link": null
                  },
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "openSearch": {
              "additionalProperties": false,
              "description": "To get your own OpenSearch instance head over to the IaC-repo to provision each instance.\nSee [navikt/aiven-iac](https://github.com/navikt/aiven-iac) repository.",
              "properties": {
                "access": {
                  "description": "Access level for OpenSearch user",
                  "enum": [
                    "read",
                    "write",
                    "readwrite",
                    "admin"
                  ],
                  "type": "string"
                },
                "instance": {
                  "description": "Configure your application to access your OpenSearch instance.\nThe last part of the name used when creating the instance (ie. opensearch-{team}-{instance})",
                  "type": "string"
                }
              },
              "required": [
                "instance"
              ],
              "type": "object"
            },
            "parallelism": {
              "description": "For running pods in parallel.\nIf it is specified as 0, then the Job is effectively paused until it is increased.",
              "example": {
                "Availability": "",
                "Default": "1",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://kubernetes.io/docs/concepts/workloads/controllers/job/#controlling-parallelism"
                ]
              },
              "format": "int32",
              "type": "integer"
            },
            "preStopHook": {
              "additionalProperties": false,
              "description": "PreStopHook is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.\nThe handler is not called if the container crashes or exits by itself.\nThe reason for termination is passed to the handler.",
              "example": {
                "Availability": "",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://doc.nais.io/workloads/explanations/good-practices/#handles-termination-gracefully",
                  "https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                ]
              },
              "properties": {
                "exec": {
                  "additionalProperties": false,
                  "description": "Command that should be run inside the main container just before the pod is shut down by Kubernetes.",
                  "properties": {
                    "command": {
                      "description": "Command is the command line to execute inside the container before the pod is shut down.\nThe command is not run inside a shell, so traditional shell instructions (pipes, redirects, etc.) won't work.\nTo use a shell, you need to explicitly call out to that shell.\n\n\nIf the exit status is non-zero, the pod will still be shut down, and marked as `Failed`.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "http": {
                  "additionalProperties": false,
                  "description": "HTTP GET request that is called just before the pod is shut down by Kubernetes.",
                  "properties": {
                    "path": {
                      "description": "Path to access on the HTTP server.",
                      "type": "string"
                    },
                    "port": {
                      "description": "Port to access on the container.\nDefaults to application port, as defined in `.spec.port`.",
                      "maximum": 65535,
                      "minimum": 1,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "path"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "readiness": {
              "additionalProperties": false,
              "description": "Sometimes, Naisjobs are temporarily unable to serve traffic. For example, an Naisjob might need\nto load large data or configuration files during startup, or depend on external services after startup.\nIn such cases, you don't want to kill the Naisjob, but you don’t want to send it requests either.\nKubernetes provides readiness probes to detect and mitigate these situations. A pod with containers\nreporting that they are not ready does not receive traffic through Kubernetes Services.\nRead more about this over at the [Kubernetes readiness documentation](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/).",
              "properties": {
                "failureThreshold": {
                  "description": "When a Pod starts, and the probe fails, Kubernetes will try _failureThreshold_ times before giving up.\nGiving up in case of a startup probe means restarting the Pod.",
                  "type": "integer"
                },
                "initialDelay": {
                  "description": "Number of seconds after the container has started before startup probes are initiated.",
                  "type": "integer"
                },
                "path": {
                  "description": "HTTP endpoint path that signals 200 OK if the application has started successfully.",
                  "type": "string"
                },
                "periodSeconds": {
                  "description": "How often (in seconds) to perform the probe.",
                  "type": "integer"
                },
                "port": {
                  "description": "Port for the startup probe.",
                  "type": "integer"
                },
                "timeout": {
                  "description": "Number of seconds after which the probe times out.",
                  "type": "integer"
                }
              },
              "required": [
                "path"
              ],
              "type": "object"
            },
            "redis": {
              "description": "List of redis instances this job needs credentials for.\nMust be owned by same team.",
              "example": {
                "Availability": "",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://doc.nais.io/persistence/redis/"
                ]
              },
              "items": {
                "properties": {
                  "access": {
                    "description": "Access level for redis user",
                    "enum": [
                      "read",
                      "write",
                      "readwrite",
                      "admin"
                    ],
                    "type": "string"
                  },
                  "instance": {
                    "description": "The last part of the name used when creating the instance (ie. redis-{team}-{instance})",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "resources": {
              "additionalProperties": false,
              "description": "When Containers have [resource requests](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) specified,\nthe Kubernetes scheduler can make better decisions about which nodes to place pods on.",
              "example": {
                "Availability": "",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://doc.nais.io/workloads/explanations/good-practices/#set-reasonable-resource-requests-and-limits"
                ]
              },
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "description": "Limit defines the maximum amount of resources a container can use before getting evicted.",
                  "properties": {
                    "cpu": {
                      "pattern": "^\\d+m?$",
                      "type": "string"
                    },
                    "memory": {
                      "pattern": "^\\d+[KMG]i$",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "description": "Request defines the amount of resources a container is allocated on startup.",
                  "properties": {
                    "cpu": {
                      "pattern": "^\\d+m?$",
                      "type": "string"
                    },
                    "memory": {
                      "pattern": "^\\d+[KMG]i$",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "restartPolicy": {
              "description": "RestartPolicy describes how the container should be restarted. Only one of the following restart policies may be specified.\nIf none of the following policies is specified, the default one is Never.\nRead more about [Kubernetes handling pod and container failures](https://kubernetes.io/docs/concepts/workloads/controllers/job/#handling-pod-and-container-failures)",
              "enum": [
                "OnFailure",
                "Never"
              ],
              "type": "string"
            },
            "schedule": {
              "description": "The [Cron](https://en.wikipedia.org/wiki/Cron) schedule for running the Naisjob.\nIf not specified, the Naisjob will be run as a one-shot Job. The timezone for Naisjobs defaults to UTC.",
              "type": "string"
            },
            "secureLogs": {
              "additionalProperties": false,
              "description": "Whether or not to enable a sidecar container for secure logging.",
              "properties": {
                "enabled": {
                  "description": "Whether to enable a sidecar container for secure logging.\nIf enabled, a volume is mounted in the pods where secure logs can be saved.",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled"
              ],
              "type": "object"
            },
            "skipCaBundle": {
              "description": "Whether to skip injection of NAV certificate authority bundle or not. Defaults to false.",
              "type": "boolean"
            },
            "startup": {
              "additionalProperties": false,
              "description": "Kubernetes uses startup probes to know when a container application has started. If such a probe is configured,\nit disables liveness and readiness checks until it succeeds, making sure those probes don't interfere with the\napplication startup. This can be used to adopt liveness checks on slow starting containers, avoiding them getting\nkilled by Kubernetes before they are up and running.",
              "properties": {
                "failureThreshold": {
                  "description": "When a Pod starts, and the probe fails, Kubernetes will try _failureThreshold_ times before giving up.\nGiving up in case of a startup probe means restarting the Pod.",
                  "type": "integer"
                },
                "initialDelay": {
                  "description": "Number of seconds after the container has started before startup probes are initiated.",
                  "type": "integer"
                },
                "path": {
                  "description": "HTTP endpoint path that signals 200 OK if the application has started successfully.",
                  "type": "string"
                },
                "periodSeconds": {
                  "description": "How often (in seconds) to perform the probe.",
                  "type": "integer"
                },
                "port": {
                  "description": "Port for the startup probe.",
                  "type": "integer"
                },
                "timeout": {
                  "description": "Number of seconds after which the probe times out.",
                  "type": "integer"
                }
              },
              "required": [
                "path"
              ],
              "type": "object"
            },
            "successfulJobsHistoryLimit": {
              "description": "Specify how many completed Jobs should be kept.",
              "format": "int32",
              "type": "integer"
            },
            "terminationGracePeriodSeconds": {
              "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nFor most jobs, the default is more than enough. Defaults to 30 seconds.",
              "format": "int64",
              "maximum": 180,
              "minimum": 0,
              "type": "integer"
            },
            "timeZone": {
              "description": "TimeZone for Naisjobs. Defaults to UTC. Only used if Schedule is specified.\nSpecify a valid [IANA timezone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).",
              "type": "string"
            },
            "ttlSecondsAfterFinished": {
              "description": "Specify the number of seconds to wait before removing the Job after it has finished (either Completed or Failed).\nIf the field is unset, this Job won't be cleaned up by the TTL controller after it finishes.",
              "format": "int32",
              "type": "integer"
            },
            "vault": {
              "additionalProperties": false,
              "description": "Provides secrets management, identity-based access, and encrypting application data for auditing of secrets\nfor applications, systems, and users.",
              "example": {
                "Availability": "on-premises",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://github.com/navikt/vault-iac/tree/master/doc"
                ]
              },
              "properties": {
                "enabled": {
                  "description": "If set to true, fetch secrets from Vault and inject into the pods.",
                  "type": "boolean"
                },
                "paths": {
                  "description": "List of secret paths to be read from Vault and injected into the pod's filesystem.\nOverriding the `paths` array is optional, and will give you fine-grained control over which Vault paths that will be mounted on the file system.\n\n\nBy default, the list will contain an entry with\n\n\n`kvPath: /kv/\u003cenvironment\u003e/\u003czone\u003e/\u003capplication\u003e/\u003cnamespace\u003e`\n`mountPath: /var/run/secrets/nais.io/vault`\n\n\nthat will always be attempted to be mounted.",
                  "items": {
                    "properties": {
                      "format": {
                        "description": "Format of the secret that should be processed.",
                        "enum": [
                          "flatten",
                          "json",
                          "yaml",
                          "env",
                          "properties",
                          ""
                        ],
                        "type": "string"
                      },
                      "kvPath": {
                        "description": "Path to Vault key/value store that should be mounted into the file system.",
                        "type": "string"
                      },
                      "mountPath": {
                        "description": "File system path that the secret will be mounted into.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "kvPath",
                      "mountPath"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "sidecar": {
                  "description": "If enabled, the sidecar will automatically refresh the token's Time-To-Live before it expires.",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "webproxy": {
              "description": "Inject on-premises web proxy configuration into the job container.\nMost Linux applications should auto-detect these settings from the `$HTTP_PROXY`, `$HTTPS_PROXY` and `$NO_PROXY` environment variables (and their lowercase counterparts).\nJava applications can start the JVM using parameters from the `$JAVA_PROXY_OPTIONS` environment variable.",
              "example": {
                "Availability": "on-premises",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": null
              },
              "type": "boolean"
            }
          },
          "required": [
            "image"
          ],
          "type": "object"
        },
        "status": {
          "additionalProperties": false,
          "description": "Status contains different NAIS status properties",
          "properties": {
            "conditions": {
              "items": {
                "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
                "properties": {
                  "lastTransitionTime": {
                    "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                    "format": "date-time",
                    "type": "object"
                  },
                  "message": {
                    "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                    "maxLength": 32768,
                    "type": "string"
                  },
                  "observedGeneration": {
                    "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                    "format": "int64",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "reason": {
                    "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                    "maxLength": 1024,
                    "minLength": 1,
                    "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                    "type": "string"
                  },
                  "status": {
                    "description": "status of the condition, one of True, False, Unknown.",
                    "enum": [
                      "True",
                      "False",
                      "Unknown"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                    "maxLength": 316,
                    "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                    "type": "string"
                  }
                },
                "required": [
                  "lastTransitionTime",
                  "message",
                  "reason",
                  "status",
                  "type"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "correlationID": {
              "type": "string"
            },
            "deploymentRolloutStatus": {
              "type": "string"
            },
            "rolloutCompleteTime": {
              "format": "int64",
              "type": "integer"
            },
            "synchronizationHash": {
              "type": "string"
            },
            "synchronizationState": {
              "type": "string"
            },
            "synchronizationTime": {
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "spec",
        "kind",
        "metadata",
        "apiVersion"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "nais.io",
          "kind": "Naisjob",
          "version": "nais.io/v1"
        }
      ]
    },
    {
      "$schema": "http://json-schema.org/schema#",
      "additionalProperties": false,
      "description": "Application defines a NAIS application.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "enum": [
            "nais.io/v1alpha1"
          ],
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "enum": [
            "Application"
          ],
          "type": "string"
        },
        "metadata": {
          "additionalProperties": false,
          "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create.",
          "properties": {
            "annotations": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
              "type": "object"
            },
            "creationTimestamp": {
              "additionalProperties": false,
              "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
              "type": "object"
            },
            "deletionGracePeriodSeconds": {
              "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.",
              "format": "int64",
              "type": "integer"
            },
            "deletionTimestamp": {
              "additionalProperties": false,
              "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
              "type": "object"
            },
            "finalizers": {
              "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "generateName": {
              "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
              "type": "string"
            },
            "generation": {
              "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.",
              "format": "int64",
              "type": "integer"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
              "properties": {
                "team": {
                  "type": "string"
                }
              },
              "required": [
                "team"
              ],
              "type": "object"
            },
            "managedFields": {
              "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.",
              "items": {
                "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to.",
                "properties": {
                  "apiVersion": {
                    "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted.",
                    "type": "string"
                  },
                  "fieldsType": {
                    "description": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\"",
                    "type": "string"
                  },
                  "fieldsV1": {
                    "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
                    "type": "object"
                  },
                  "manager": {
                    "description": "Manager is an identifier of the workflow managing these fields.",
                    "type": "string"
                  },
                  "operation": {
                    "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'.",
                    "type": "string"
                  },
                  "subresource": {
                    "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource.",
                    "type": "string"
                  },
                  "time": {
                    "description": "Time is the timestamp of when the ManagedFields entry was added. The\ntimestamp will also be updated if a field is added, the manager\nchanges any of the owned fields value or removes a field. The\ntimestamp does not update when a field is removed from the entry\nbecause another manager took it over.",
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array",
              "x-kubernetes-list-type": "atomic"
            },
            "name": {
              "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
              "type": "string"
            },
            "ownerReferences": {
              "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.",
              "items": {
                "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "blockOwnerDeletion": {
                    "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.",
                    "type": "boolean"
                  },
                  "controller": {
                    "description": "If true, this reference points to the managing controller.",
                    "type": "boolean"
                  },
                  "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                    "type": "string"
                  }
                },
                "required": [
                  "apiVersion",
                  "kind",
                  "name",
                  "uid"
                ],
                "type": "object",
                "x-kubernetes-map-type": "atomic"
              },
              "type": "array",
              "x-kubernetes-list-map-keys": [
                "uid"
              ],
              "x-kubernetes-list-type": "map"
            },
            "resourceVersion": {
              "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": "string"
            },
            "selfLink": {
              "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
              "type": "string"
            },
            "uid": {
              "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\n\nPopulated by the system.\nRead-only.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace",
            "labels"
          ],
          "type": "object"
        },
        "spec": {
          "additionalProperties": false,
          "description": "ApplicationSpec contains the NAIS manifest.\nPlease keep this list sorted for clarity.",
          "properties": {
            "accessPolicy": {
              "additionalProperties": false,
              "description": "By default, no traffic is allowed between applications inside the cluster.\nConfigure access policies to explicitly allow communication between applications.\nThis is also used for granting inbound access in the context of Azure AD and TokenX clients.",
              "example": {
                "Availability": "",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://doc.nais.io/workloads/explanations/zero-trust/"
                ]
              },
              "properties": {
                "inbound": {
                  "additionalProperties": false,
                  "description": "Configures inbound access for your application.",
                  "properties": {
                    "rules": {
                      "description": "List of NAIS applications that may access your application.\nThese settings apply both to Zero Trust network connectivity and token validity for Azure AD and TokenX tokens.",
                      "items": {
                        "properties": {
                          "application": {
                            "description": "The application's name.",
                            "type": "string"
                          },
                          "cluster": {
                            "description": "The application's cluster. May be omitted if it should be in the same cluster as your application.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "The application's namespace. May be omitted if it should be in the same namespace as your application.",
                            "type": "string"
                          },
                          "permissions": {
                            "description": "Permissions contains a set of permissions that are granted to the given application.\nCurrently only applicable for Azure AD clients.",
                            "example": {
                              "Availability": "",
                              "Default": "",
                              "Deprecated": false,
                              "Experimental": false,
                              "Hidden": false,
                              "Immutable": false,
                              "Link": [
                                "https://doc.nais.io/security/auth/azure-ad/configuration#fine-grained-access-control"
                              ]
                            },
                            "properties": {
                              "roles": {
                                "description": "Roles is a set of custom permission roles that are granted to a given application.",
                                "example": {
                                  "Availability": "",
                                  "Default": "",
                                  "Deprecated": false,
                                  "Experimental": false,
                                  "Hidden": false,
                                  "Immutable": false,
                                  "Link": [
                                    "https://doc.nais.io/security/auth/azure-ad/configuration#custom-roles"
                                  ]
                                },
                                "items": {
                                  "pattern": "^[a-z0-9-_./]+$",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "scopes": {
                                "description": "Scopes is a set of custom permission scopes that are granted to a given application.",
                                "example": {
                                  "Availability": "",
                                  "Default": "",
                                  "Deprecated": false,
                                  "Experimental": false,
                                  "Hidden": false,
                                  "Immutable": false,
                                  "Link": [
                                    "https://doc.nais.io/security/auth/azure-ad/configuration#custom-scopes"
                                  ]
                                },
                                "items": {
                                  "pattern": "^[a-z0-9-_./]+$",
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "required": [
                          "application"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "rules"
                  ],
                  "type": "object"
                },
                "outbound": {
                  "additionalProperties": false,
                  "description": "Configures outbound access for your application.",
                  "properties": {
                    "external": {
                      "description": "List of external resources that your applications should be able to reach.",
                      "example": {
                        "Availability": "GCP",
                        "Default": "",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": null
                      },
                      "items": {
                        "properties": {
                          "host": {
                            "description": "The _host_ that your application should be able to reach, i.e. without the protocol (e.g. `https://`). \"Host\" and \"IPv4\" are mutually exclusive",
                            "pattern": "^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])(\\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]))*$",
                            "type": "string"
                          },
                          "ipv4": {
                            "description": "The IPv4 address that your application should be able to reach. \"IPv4\" and \"Host\" are mutually exclusive",
                            "pattern": "^(([0-9])|([1-9][0-9])|(1([0-9]{2}))|(2[0-4][0-9])|(25[0-5]))((\\.(([0-9])|([1-9][0-9])|(1([0-9]{2}))|(2[0-4][0-9])|(25[0-5]))){3})$",
                            "type": "string"
                          },
                          "ports": {
                            "description": "List of port rules for external communication. Must be specified if using protocols other than HTTPS.",
                            "items": {
                              "properties": {
                                "port": {
                                  "description": "The port used for communication.",
                                  "format": "int32",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "port"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "rules": {
                      "description": "List of NAIS applications that your application needs to access.\nThese settings apply to Zero Trust network connectivity.",
                      "items": {
                        "properties": {
                          "application": {
                            "description": "The application's name.",
                            "type": "string"
                          },
                          "cluster": {
                            "description": "The application's cluster. May be omitted if it should be in the same cluster as your application.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "The application's namespace. May be omitted if it should be in the same namespace as your application.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "application"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "azure": {
              "additionalProperties": false,
              "description": "Provisions and configures Azure resources.",
              "properties": {
                "application": {
                  "additionalProperties": false,
                  "description": "Configures an Entra ID client for this application.",
                  "example": {
                    "Availability": "",
                    "Default": "",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://doc.nais.io/auth/entra-id/"
                    ]
                  },
                  "properties": {
                    "allowAllUsers": {
                      "description": "AllowAllUsers grants all users within the tenant access to this application.",
                      "example": {
                        "Availability": "",
                        "Default": "false",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": [
                          "https://doc.nais.io/auth/entra-id/how-to/secure/#all-users"
                        ]
                      },
                      "type": "boolean"
                    },
                    "claims": {
                      "additionalProperties": false,
                      "description": "Claims defines additional configuration of the emitted claims in tokens returned to the Azure AD application.",
                      "properties": {
                        "extra": {
                          "description": "Deprecated, do not use.",
                          "example": {
                            "Availability": "",
                            "Default": "",
                            "Deprecated": true,
                            "Experimental": false,
                            "Hidden": true,
                            "Immutable": false,
                            "Link": null
                          },
                          "items": {
                            "enum": [
                              "NAVident",
                              "azp_name"
                            ],
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "groups": {
                          "description": "Groups is a list of Azure AD group IDs to be emitted in the `groups` claim in tokens issued by Azure AD.\nThis also assigns groups to the application for access control. Only direct members of the groups are granted access.",
                          "example": {
                            "Availability": "",
                            "Default": "",
                            "Deprecated": false,
                            "Experimental": false,
                            "Hidden": false,
                            "Immutable": false,
                            "Link": [
                              "https://doc.nais.io/security/auth/azure-ad/configuration/#groups"
                            ]
                          },
                          "items": {
                            "properties": {
                              "id": {
                                "description": "ID is the actual `object ID` associated with the given group in Azure AD.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "enabled": {
                      "description": "If enabled, provisions an Entra ID application.",
                      "type": "boolean"
                    },
                    "replyURLs": {
                      "description": "Deprecated. Only use if you're implementing logins _without_ using sidecar.",
                      "example": {
                        "Availability": "",
                        "Default": "",
                        "Deprecated": true,
                        "Experimental": false,
                        "Hidden": true,
                        "Immutable": false,
                        "Link": null
                      },
                      "items": {
                        "pattern": "^https?:\\/\\/.+$",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "singlePageApplication": {
                      "description": "Deprecated, do not use.",
                      "example": {
                        "Availability": "",
                        "Default": "",
                        "Deprecated": true,
                        "Experimental": false,
                        "Hidden": true,
                        "Immutable": false,
                        "Link": null
                      },
                      "type": "boolean"
                    },
                    "tenant": {
                      "description": "Tenant targets a specific tenant for the Entra ID application.\nOnly works in the development clusters. Only use this if you have a specific reason to do so.\nUsing this will _isolate_ your application from all other applications that are not using the same tenant.",
                      "enum": [
                        "nav.no",
                        "trygdeetaten.no"
                      ],
                      "example": {
                        "Availability": "",
                        "Default": "",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": [
                          "https://doc.nais.io/auth/entra-id/explanations/#tenants"
                        ]
                      },
                      "type": "string"
                    }
                  },
                  "required": [
                    "enabled"
                  ],
                  "type": "object"
                },
                "sidecar": {
                  "additionalProperties": false,
                  "description": "Sidecar configures a sidecar that intercepts every HTTP request, and performs the OIDC flow if necessary.\nAll requests to ingress + `/oauth2` will be processed only by the sidecar, whereas all other requests\nwill be proxied to the application.\n\n\nIf the user is authenticated with Entra ID, the `Authorization` header will be set to `Bearer \u003cJWT\u003e`.",
                  "example": {
                    "Availability": "GCP",
                    "Default": "",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://doc.nais.io/auth/explanations/#login-proxy"
                    ]
                  },
                  "properties": {
                    "autoLogin": {
                      "description": "Automatically redirect the user to login for all proxied GET requests.",
                      "example": {
                        "Availability": "",
                        "Default": "false",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": [
                          "https://doc.nais.io/auth/explanations/#autologin"
                        ]
                      },
                      "type": "boolean"
                    },
                    "autoLoginIgnorePaths": {
                      "description": "Absolute paths to ignore when auto-login is enabled.",
                      "example": {
                        "Availability": "",
                        "Default": "",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": [
                          "https://doc.nais.io/auth/reference/#autologin-exclusions"
                        ]
                      },
                      "items": {
                        "pattern": "^\\/.*$",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "enabled": {
                      "description": "Enable the sidecar.",
                      "type": "boolean"
                    },
                    "resources": {
                      "additionalProperties": false,
                      "description": "Resource requirements for the sidecar container.",
                      "properties": {
                        "limits": {
                          "additionalProperties": false,
                          "description": "Limit defines the maximum amount of resources a container can use before getting evicted.",
                          "properties": {
                            "cpu": {
                              "pattern": "^\\d+m?$",
                              "type": "string"
                            },
                            "memory": {
                              "pattern": "^\\d+[KMG]i$",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "requests": {
                          "additionalProperties": false,
                          "description": "Request defines the amount of resources a container is allocated on startup.",
                          "properties": {
                            "cpu": {
                              "pattern": "^\\d+m?$",
                              "type": "string"
                            },
                            "memory": {
                              "pattern": "^\\d+[KMG]i$",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "enabled"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "application"
              ],
              "type": "object"
            },
            "command": {
              "description": "Override command when starting Docker image.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "env": {
              "description": "Custom environment variables injected into your container.\nSpecify either `value` or `valueFrom`, but not both.",
              "items": {
                "properties": {
                  "name": {
                    "description": "Environment variable name. May only contain letters, digits, and the underscore `_` character.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Environment variable value. Numbers and boolean values must be quoted.\nRequired unless `valueFrom` is specified.",
                    "type": "string"
                  },
                  "valueFrom": {
                    "description": "Dynamically set environment variables based on fields found in the Pod spec.",
                    "example": {
                      "Availability": "",
                      "Default": "",
                      "Deprecated": false,
                      "Experimental": false,
                      "Hidden": false,
                      "Immutable": false,
                      "Link": [
                        "https://kubernetes.io/docs/tasks/inject-data-application/environment-variable-expose-pod-information/"
                      ]
                    },
                    "properties": {
                      "fieldRef": {
                        "properties": {
                          "fieldPath": {
                            "description": "Field value from the `Pod` spec that should be copied into the environment variable.",
                            "enum": [
                              "",
                              "metadata.name",
                              "metadata.namespace",
                              "metadata.labels",
                              "metadata.annotations",
                              "spec.nodeName",
                              "spec.serviceAccountName",
                              "status.hostIP",
                              "status.podIP"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "fieldPath"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "fieldRef"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "envFrom": {
              "description": "EnvFrom exposes all variables in the ConfigMap or Secret resources as environment variables.\nOne of `configMap` or `secret` is required.\n\n\nEnvironment variables will take the form `KEY=VALUE`, where `key` is the ConfigMap or Secret key.\nYou can specify as many keys as you like in a single ConfigMap or Secret.\n\n\nThe ConfigMap and Secret resources must live in the same Kubernetes namespace as the Application resource.",
              "example": {
                "Availability": "team namespaces",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": null
              },
              "items": {
                "properties": {
                  "configmap": {
                    "description": "Name of the `ConfigMap` where environment variables are specified.\nRequired unless `secret` is set.",
                    "type": "string"
                  },
                  "secret": {
                    "description": "Name of the `Secret` where environment variables are specified.\nRequired unless `configMap` is set.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "filesFrom": {
              "description": "List of ConfigMap, Secret, or EmptyDir resources that will have their contents mounted into the containers.\nEither `configMap`, `secret`, or `emptyDir` is required.\n\n\nFiles will take the path `\u003cmountPath\u003e/\u003ckey\u003e`, where `key` is the ConfigMap or Secret key.\nYou can specify as many keys as you like in a single ConfigMap or Secret, and they will all\nbe mounted to the same directory.\n\n\nIf you reference an emptyDir you will just get an empty directory, backed\nby your requested memory or the disk on the node where your pod is\nrunning.\n\n\nThe ConfigMap and Secret resources must live in the same Kubernetes namespace as the Application resource.",
              "example": {
                "Availability": "team namespaces",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": null
              },
              "items": {
                "properties": {
                  "configmap": {
                    "description": "Name of the `ConfigMap` that contains files that should be mounted into the container.\nRequired unless `secret` or `persistentVolumeClaim` is set.",
                    "type": "string"
                  },
                  "emptyDir": {
                    "description": "Specification of an empty directory",
                    "properties": {
                      "medium": {
                        "enum": [
                          "Memory",
                          "Disk"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "mountPath": {
                    "description": "Filesystem path inside the pod where files are mounted.\nThe directory will be created if it does not exist. If the directory exists,\nany files in the directory will be made unaccessible.\n\n\nDefaults to `/var/run/configmaps/\u003cNAME\u003e`, `/var/run/secrets`, or `/var/run/pvc/\u003cNAME\u003e`, depending on which of them is specified.\nFor EmptyDir, MountPath must be set.",
                    "type": "string"
                  },
                  "persistentVolumeClaim": {
                    "description": "Name of the `PersistentVolumeClaim` that should be mounted into the container.\nRequired unless `configMap` or `secret` is set.\nThis feature requires coordination with the NAIS team.",
                    "type": "string"
                  },
                  "secret": {
                    "description": "Name of the `Secret` that contains files that should be mounted into the container.\nRequired unless `configMap` or `persistentVolumeClaim` is set.\nIf mounting multiple secrets, `mountPath` *MUST* be set to avoid collisions.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "frontend": {
              "additionalProperties": false,
              "description": "Configuration options specifically for frontend applications.",
              "example": {
                "Availability": "GCP",
                "Default": "",
                "Deprecated": false,
                "Experimental": true,
                "Hidden": false,
                "Immutable": false,
                "Link": null
              },
              "properties": {
                "generatedConfig": {
                  "additionalProperties": false,
                  "properties": {
                    "mountPath": {
                      "description": "If specified, a Javascript file with application specific frontend configuration variables\nwill be generated and mounted into the pod file system at the specified path.\nYou can import this file directly from your Javascript application.",
                      "example": {
                        "Availability": "",
                        "Default": "",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": [
                          "https://doc.nais.io/observability/frontend/#auto-configuration"
                        ]
                      },
                      "type": "string"
                    }
                  },
                  "required": [
                    "mountPath"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "gcp": {
              "additionalProperties": false,
              "example": {
                "Availability": "GCP",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": null
              },
              "properties": {
                "bigQueryDatasets": {
                  "description": "Provision BigQuery datasets and give your application's pod mountable secrets for connecting to each dataset.\nDatasets are immutable and cannot be changed.",
                  "example": {
                    "Availability": "GCP",
                    "Default": "",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://cloud.google.com/bigquery/docs"
                    ]
                  },
                  "items": {
                    "properties": {
                      "cascadingDelete": {
                        "description": "When set to true will delete the dataset, when the application resource is deleted.\nNB: If no tables exist in the bigquery dataset, it _will_ delete the dataset even if this value is set/defaulted to `false`.\nDefault value is `false`.",
                        "example": {
                          "Availability": "",
                          "Default": "",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": true,
                          "Link": null
                        },
                        "type": "boolean"
                      },
                      "description": {
                        "description": "Human-readable description of what this BigQuery dataset contains, or is used for.\nWill be visible in the GCP Console.",
                        "example": {
                          "Availability": "",
                          "Default": "",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": true,
                          "Link": null
                        },
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the BigQuery Dataset.\nThe canonical name of the dataset will be `\u003cTEAM_PROJECT_ID\u003e:\u003cNAME\u003e`.",
                        "example": {
                          "Availability": "",
                          "Default": "",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": true,
                          "Link": null
                        },
                        "pattern": "^[a-z0-9][a-z0-9_]+$",
                        "type": "string"
                      },
                      "permission": {
                        "description": "Permission level given to application.",
                        "enum": [
                          "READ",
                          "READWRITE"
                        ],
                        "example": {
                          "Availability": "",
                          "Default": "",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": true,
                          "Link": null
                        },
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "permission"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "buckets": {
                  "description": "Provision cloud storage buckets and connect them to your application.",
                  "example": {
                    "Availability": "GCP",
                    "Default": "",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://doc.nais.io/persistence/buckets/"
                    ]
                  },
                  "items": {
                    "properties": {
                      "cascadingDelete": {
                        "description": "Allows deletion of bucket. Set to true if you want to delete the bucket.",
                        "type": "boolean"
                      },
                      "lifecycleCondition": {
                        "description": "Conditions for the bucket to use when selecting objects to delete in cleanup.",
                        "example": {
                          "Availability": "",
                          "Default": "",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": [
                            "https://cloud.google.com/storage/docs/lifecycle"
                          ]
                        },
                        "properties": {
                          "age": {
                            "description": "Condition is satisfied when the object reaches the specified age in days. These will be deleted.",
                            "type": "integer"
                          },
                          "createdBefore": {
                            "description": "Condition is satisfied when the object is created before midnight on the specified date. These will be deleted.",
                            "type": "string"
                          },
                          "numNewerVersions": {
                            "description": "Condition is satisfied when the object has the specified number of newer versions.\nThe older versions will be deleted.",
                            "type": "integer"
                          },
                          "withState": {
                            "description": "Condition is satisfied when the object has the specified state.",
                            "enum": [
                              "",
                              "LIVE",
                              "ARCHIVED",
                              "ANY"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "name": {
                        "description": "The name of the bucket",
                        "type": "string"
                      },
                      "publicAccessPrevention": {
                        "description": "Public access prevention allows you to prevent public access to your bucket.",
                        "example": {
                          "Availability": "",
                          "Default": "false",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": [
                            "https://cloud.google.com/storage/docs/public-access-prevention"
                          ]
                        },
                        "type": "boolean"
                      },
                      "retentionPeriodDays": {
                        "description": "The number of days to hold objects in the bucket before it is allowed to delete them.",
                        "maximum": 36500,
                        "minimum": 1,
                        "type": "integer"
                      },
                      "uniformBucketLevelAccess": {
                        "description": "Allows you to uniformly control access to your Cloud Storage resources.\nWhen you enable uniform bucket-level access on a bucket, Access Control Lists (ACLs) are disabled, and only bucket-level Identity\nand Access Management (IAM) permissions grant access to that bucket and the objects it contains.\n\n\nUniform access control can not be reversed after 90 days! This is controlled by Google.",
                        "example": {
                          "Availability": "",
                          "Default": "false",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": [
                            "https://cloud.google.com/storage/docs/uniform-bucket-level-access"
                          ]
                        },
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "permissions": {
                  "description": "List of _additional_ permissions that should be granted to your application for accessing external GCP resources that have not been provisioned through NAIS.",
                  "example": {
                    "Availability": "GCP",
                    "Default": "",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": null
                  },
                  "items": {
                    "properties": {
                      "resource": {
                        "description": "IAM resource to bind the role to.",
                        "properties": {
                          "apiVersion": {
                            "description": "Kubernetes _APIVersion_.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kubernetes _Kind_.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Kubernetes _Name_.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "apiVersion",
                          "kind"
                        ],
                        "type": "object"
                      },
                      "role": {
                        "description": "Name of the GCP role to bind the resource to.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "resource",
                      "role"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "sqlInstances": {
                  "description": "Provision database instances and connect them to your application.",
                  "example": {
                    "Availability": "GCP",
                    "Default": "",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://doc.nais.io/persistence/postgres/",
                      "https://cloud.google.com/sql/docs/postgres/instance-settings#impact"
                    ]
                  },
                  "items": {
                    "properties": {
                      "autoBackupHour": {
                        "description": "If specified, run automatic backups of the SQL database at the given hour.\nNote that this will backup the whole SQL instance, and not separate databases.\nRestores are done using the Google Cloud Console.",
                        "maximum": 23,
                        "minimum": 0,
                        "type": "integer"
                      },
                      "cascadingDelete": {
                        "description": "Remove the entire Postgres server including all data when the Kubernetes resource is deleted.\n*THIS IS A DESTRUCTIVE OPERATION*! Set cascading delete only when you want to remove data forever.",
                        "type": "boolean"
                      },
                      "collation": {
                        "description": "Sort order for `ORDER BY ...` clauses.",
                        "type": "string"
                      },
                      "databases": {
                        "description": "List of databases that should be created on this Postgres server.",
                        "items": {
                          "properties": {
                            "envVarPrefix": {
                              "description": "Prefix to add to environment variables made available for database connection.\nIf switching to `EnvVarPrefix` you need to [reset database credentials](https://doc.nais.io/persistence/postgres/#reset-database-credentials).",
                              "type": "string"
                            },
                            "name": {
                              "description": "Database name.\n*Be aware that only one database with this name is allowed in a namespace, regardless of which SQLInstance it belongs to*",
                              "type": "string"
                            },
                            "users": {
                              "description": "Add extra users for database access. These users need to be manually given access to database tables.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "description": "User name.",
                                    "pattern": "^[_a-zA-Z][-_a-zA-Z0-9]+$",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object"
                        },
                        "maxItems": 1,
                        "type": "array"
                      },
                      "diskAutoresize": {
                        "description": "When set to true, GCP will automatically increase storage by XXX for the database when\ndisk usage is above the high water mark. Setting this field to true also disables\nmanual control over disk size, i.e. the `diskSize` parameter will be ignored.",
                        "example": {
                          "Availability": "",
                          "Default": "",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": [
                            "https://cloud.google.com/sql/docs/postgres/instance-settings#threshold"
                          ]
                        },
                        "type": "boolean"
                      },
                      "diskAutoresizeLimit": {
                        "description": "The maximum size, in GB, to which storage capacity can be automatically increased.\nThe default value is 0, which specifies that there is no limit.",
                        "example": {
                          "Availability": "",
                          "Default": "0",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": null
                        },
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer"
                      },
                      "diskSize": {
                        "description": "How much hard drive space to allocate for the SQL server, in gigabytes.\nThis parameter is used when first provisioning a server.\nDisk size can be changed using this field _only when diskAutoresize is set to false_.",
                        "minimum": 10,
                        "type": "integer"
                      },
                      "diskType": {
                        "description": "Disk type to use for storage in the database.",
                        "enum": [
                          "SSD",
                          "HDD"
                        ],
                        "type": "string"
                      },
                      "flags": {
                        "description": "Set flags to control the behavior of the instance.\nBe aware that NAIS _does not validate_ these flags, so take extra care\nto make sure the values match against the specification, otherwise your deployment\nwill seemingly work OK, but the database flags will not function as expected.",
                        "example": {
                          "Availability": "",
                          "Default": "",
                          "Deprecated": false,
                          "Experimental": true,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": [
                            "https://cloud.google.com/sql/docs/postgres/flags#list-flags-postgres"
                          ]
                        },
                        "items": {
                          "properties": {
                            "name": {
                              "description": "Name of the flag.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Value of the flag.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "value"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "highAvailability": {
                        "description": "When set to true this will set up standby database for failover.",
                        "type": "boolean"
                      },
                      "insights": {
                        "description": "Configures query insights which are now default for new sql instances.",
                        "properties": {
                          "enabled": {
                            "description": "True if Query Insights feature is enabled.",
                            "example": {
                              "Availability": "",
                              "Default": "true",
                              "Deprecated": false,
                              "Experimental": false,
                              "Hidden": false,
                              "Immutable": false,
                              "Link": null
                            },
                            "type": "boolean"
                          },
                          "queryStringLength": {
                            "description": "Maximum query length stored in bytes. Between 256 and 4500. Default to 1024.",
                            "maximum": 4500,
                            "minimum": 256,
                            "type": "integer"
                          },
                          "recordApplicationTags": {
                            "description": "True if Query Insights will record application tags from query when enabled.",
                            "type": "boolean"
                          },
                          "recordClientAddress": {
                            "description": "True if Query Insights will record client address when enabled.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "maintenance": {
                        "description": "Desired maintenance window for database updates.",
                        "properties": {
                          "day": {
                            "maximum": 7,
                            "minimum": 1,
                            "type": "integer"
                          },
                          "hour": {
                            "maximum": 23,
                            "minimum": 0,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "name": {
                        "description": "The name of the instance, if omitted the application name will be used.",
                        "type": "string"
                      },
                      "pointInTimeRecovery": {
                        "description": "Enables point-in-time recovery for sql instances using write-ahead logs.",
                        "type": "boolean"
                      },
                      "retainedBackups": {
                        "description": "Number of daily backups to retain. Defaults to 7 backups.\nThe number of retained backups must be greater or equal to TransactionLogRetentionDays.",
                        "example": {
                          "Availability": "",
                          "Default": "7",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": [
                            "https://cloud.google.com/sql/docs/postgres/backup-recovery/backups"
                          ]
                        },
                        "maximum": 365,
                        "minimum": 1,
                        "type": "integer"
                      },
                      "tier": {
                        "description": "Server tier, i.e. how much CPU and memory allocated.\nAvailable tiers are `db-f1-micro`, `db-g1-small` and custom `db-custom-CPU-RAM`.\nCustom instances must specify memory as a multiple of 256 MB and at least 3.75 GB (e.g. `db-custom-1-3840` for 1 cpu, 3840 MB ram).\nThe smallest possible instance is `db-f1-micro`, which is recommended only for development instances.\nFor production workloads, please specify at least `db-custom-1-3840`.",
                        "pattern": "db-.+",
                        "type": "string"
                      },
                      "transactionLogRetentionDays": {
                        "description": "The number of days of transaction logs gcp retains for point in time restores.",
                        "example": {
                          "Availability": "",
                          "Default": "7",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": [
                            "https://cloud.google.com/sql/docs/mysql/backup-recovery/backups#retention"
                          ]
                        },
                        "maximum": 7,
                        "minimum": 1,
                        "type": "integer"
                      },
                      "type": {
                        "description": "PostgreSQL version.",
                        "enum": [
                          "POSTGRES_11",
                          "POSTGRES_12",
                          "POSTGRES_13",
                          "POSTGRES_14",
                          "POSTGRES_15",
                          "POSTGRES_16"
                        ],
                        "example": {
                          "Availability": "",
                          "Default": "",
                          "Deprecated": false,
                          "Experimental": false,
                          "Hidden": false,
                          "Immutable": false,
                          "Link": [
                            "https://cloud.google.com/sql/docs/postgres/instance-settings"
                          ]
                        },
                        "type": "string"
                      }
                    },
                    "required": [
                      "tier",
                      "type"
                    ],
                    "type": "object"
                  },
                  "maxItems": 1,
                  "type": "array"
                }
              },
              "type": "object"
            },
            "idporten": {
              "additionalProperties": false,
              "description": "Configures ID-porten authentication for this application.\nSee [ID-porten](https://doc.nais.io/security/auth/idporten/) for more details.",
              "properties": {
                "enabled": {
                  "description": "Enable ID-porten authentication. Requires `.spec.idporten.sidecar.enabled=true`.",
                  "example": {
                    "Availability": "GCP",
                    "Default": "",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://doc.nais.io/auth/idporten/"
                    ]
                  },
                  "type": "boolean"
                },
                "sidecar": {
                  "additionalProperties": false,
                  "description": "Sidecar configures a sidecar that intercepts every HTTP request, and performs the OIDC flow if necessary.\nAll requests to ingress + `/oauth2` will be processed only by the sidecar, whereas all other requests\nwill be proxied to the application.\n\n\nIf the user is authenticated with ID-porten, the `Authorization` header will be set to `Bearer \u003cJWT\u003e`.",
                  "example": {
                    "Availability": "GCP",
                    "Default": "",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://doc.nais.io/auth/idporten/how-to/login/"
                    ]
                  },
                  "properties": {
                    "autoLogin": {
                      "description": "Automatically redirect the user to login for all proxied GET requests.",
                      "example": {
                        "Availability": "",
                        "Default": "false",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": [
                          "https://doc.nais.io/auth/explanations/#autologin"
                        ]
                      },
                      "type": "boolean"
                    },
                    "autoLoginIgnorePaths": {
                      "description": "Absolute paths to ignore when auto-login is enabled.",
                      "example": {
                        "Availability": "",
                        "Default": "",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": [
                          "https://doc.nais.io/auth/reference/#autologin-exclusions"
                        ]
                      },
                      "items": {
                        "pattern": "^\\/.*$",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "enabled": {
                      "description": "Enable the sidecar.",
                      "type": "boolean"
                    },
                    "level": {
                      "description": "Default security level for all authentication requests.",
                      "enum": [
                        "Level3",
                        "Level4",
                        "idporten-loa-substantial",
                        "idporten-loa-high"
                      ],
                      "example": {
                        "Availability": "",
                        "Default": "idporten-loa-high",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": [
                          "https://doc.nais.io/auth/idporten/reference/#security-levels"
                        ]
                      },
                      "type": "string"
                    },
                    "locale": {
                      "description": "Default user interface locale for all authentication requests.",
                      "enum": [
                        "nb",
                        "nn",
                        "en",
                        "se"
                      ],
                      "example": {
                        "Availability": "",
                        "Default": "nb",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": [
                          "https://doc.nais.io/auth/idporten/reference/#locales"
                        ]
                      },
                      "type": "string"
                    },
                    "resources": {
                      "additionalProperties": false,
                      "description": "Resource requirements for the sidecar container.",
                      "properties": {
                        "limits": {
                          "additionalProperties": false,
                          "description": "Limit defines the maximum amount of resources a container can use before getting evicted.",
                          "properties": {
                            "cpu": {
                              "pattern": "^\\d+m?$",
                              "type": "string"
                            },
                            "memory": {
                              "pattern": "^\\d+[KMG]i$",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "requests": {
                          "additionalProperties": false,
                          "description": "Request defines the amount of resources a container is allocated on startup.",
                          "properties": {
                            "cpu": {
                              "pattern": "^\\d+m?$",
                              "type": "string"
                            },
                            "memory": {
                              "pattern": "^\\d+[KMG]i$",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "enabled"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "enabled"
              ],
              "type": "object"
            },
            "image": {
              "description": "Your application's Docker image location and tag.",
              "type": "string"
            },
            "influx": {
              "additionalProperties": false,
              "description": "An InfluxDB via Aiven. A typical use case for influxdb is to store metrics from your application and visualize them in Grafana.",
              "example": {
                "Availability": "GCP",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": null
              },
              "properties": {
                "instance": {
                  "description": "Provisions an InfluxDB instance and configures your application to access it.\nUse the prefix: `influx-` + `team` that you specified in the [navikt/aiven-iac](https://github.com/navikt/aiven-iac) repository.",
                  "type": "string"
                }
              },
              "required": [
                "instance"
              ],
              "type": "object"
            },
            "ingresses": {
              "description": "List of URLs that will route HTTPS traffic to the application.\nAll URLs must start with `https://`. Domain availability differs according to which environment your application is running in.\nCheck the available environments in the reference documentation.",
              "items": {
                "pattern": "^https:\\/\\/.+$",
                "type": "string"
              },
              "type": "array"
            },
            "kafka": {
              "additionalProperties": false,
              "description": "Set up Aiven Kafka for your application.",
              "example": {
                "Availability": "",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://doc.nais.io/persistence/kafka/"
                ]
              },
              "properties": {
                "pool": {
                  "description": "Configures your application to access an Aiven Kafka cluster.",
                  "type": "string"
                },
                "streams": {
                  "description": "Allow this app to use kafka streams",
                  "example": {
                    "Availability": "GCP",
                    "Default": "false",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://doc.nais.io/persistence/kafka/how-to/internal"
                    ]
                  },
                  "type": "boolean"
                }
              },
              "required": [
                "pool"
              ],
              "type": "object"
            },
            "leaderElection": {
              "description": "If true, an HTTP endpoint will be available at `$ELECTOR_GET_URL` that returns the current leader.",
              "example": {
                "Availability": "",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://doc.nais.io/services/leader-election/"
                ]
              },
              "type": "boolean"
            },
            "liveness": {
              "additionalProperties": false,
              "description": "Many applications running for long periods of time eventually transition to broken states,\nand cannot recover except by being restarted. Kubernetes provides liveness probes to detect\nand remedy such situations. Read more about this over at the\n[Kubernetes probes documentation](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/).",
              "properties": {
                "failureThreshold": {
                  "description": "When a Pod starts, and the probe fails, Kubernetes will try _failureThreshold_ times before giving up.\nGiving up in case of a startup probe means restarting the Pod.",
                  "type": "integer"
                },
                "initialDelay": {
                  "description": "Number of seconds after the container has started before startup probes are initiated.",
                  "type": "integer"
                },
                "path": {
                  "description": "HTTP endpoint path that signals 200 OK if the application has started successfully.",
                  "type": "string"
                },
                "periodSeconds": {
                  "description": "How often (in seconds) to perform the probe.",
                  "type": "integer"
                },
                "port": {
                  "description": "Port for the startup probe.",
                  "type": "integer"
                },
                "timeout": {
                  "description": "Number of seconds after which the probe times out.",
                  "type": "integer"
                }
              },
              "required": [
                "path"
              ],
              "type": "object"
            },
            "logformat": {
              "description": "Format of the logs from the container. Use this if the container doesn't support\nJSON logging and the log is in a special format that need to be parsed.",
              "enum": [
                "",
                "accesslog",
                "accesslog_with_processing_time",
                "accesslog_with_referer_useragent",
                "capnslog",
                "logrus",
                "gokit",
                "redis",
                "glog",
                "simple",
                "influxdb",
                "log15"
              ],
              "type": "string"
            },
            "login": {
              "additionalProperties": false,
              "description": "Login configures a login proxy that sits in front of the application.",
              "example": {
                "Availability": "Tenant: SSB",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://doc.nais.io/auth/explanations/#login-proxy"
                ]
              },
              "properties": {
                "enforce": {
                  "additionalProperties": false,
                  "description": "Enforce login for all requests to the application.",
                  "properties": {
                    "enabled": {
                      "description": "If enabled, all unauthenticated requests to the application will be redirected to the login provider.",
                      "type": "boolean"
                    },
                    "excludePaths": {
                      "description": "Absolute paths to ignore when enforcing login.",
                      "items": {
                        "pattern": "^\\/.*$",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "enabled"
                  ],
                  "type": "object"
                },
                "provider": {
                  "description": "Provider configures the authentication provider for the application.",
                  "enum": [
                    "openid"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "provider"
              ],
              "type": "object"
            },
            "logtransform": {
              "description": "Extra filters for modifying log content. This can e.g. be used for setting loglevel based on http status code.",
              "enum": [
                "http_loglevel",
                "dns_loglevel"
              ],
              "type": "string"
            },
            "maskinporten": {
              "additionalProperties": false,
              "description": "Configures a Maskinporten client for this application.\nSee [Maskinporten](https://doc.nais.io/security/auth/maskinporten/) for more details.",
              "properties": {
                "enabled": {
                  "description": "If enabled, provisions and configures a Maskinporten client with consumed scopes and/or Exposed scopes with DigDir.",
                  "example": {
                    "Availability": "team namespaces",
                    "Default": "false",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": null
                  },
                  "type": "boolean"
                },
                "scopes": {
                  "additionalProperties": false,
                  "description": "Schema to configure Maskinporten clients with consumed scopes and/or exposed scopes.",
                  "properties": {
                    "consumes": {
                      "description": "This is the Schema for the consumes and exposes API.\n`consumes` is a list of scopes that your client can request access to.",
                      "items": {
                        "properties": {
                          "name": {
                            "description": "The scope consumed by the application to gain access to an external organization API.\nEnsure that the NAV organization has been granted access to the scope prior to requesting access.",
                            "example": {
                              "Availability": "",
                              "Default": "",
                              "Deprecated": false,
                              "Experimental": false,
                              "Hidden": false,
                              "Immutable": false,
                              "Link": [
                                "https://doc.nais.io/security/auth/maskinporten/#consume-scopes"
                              ]
                            },
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "exposes": {
                      "description": "`exposes` is a list of scopes your application want to expose to other organization where access to the scope is based on organization number.",
                      "items": {
                        "properties": {
                          "accessibleForAll": {
                            "description": "Allow any organization to access the scope.",
                            "example": {
                              "Availability": "",
                              "Default": "false",
                              "Deprecated": false,
                              "Experimental": false,
                              "Hidden": false,
                              "Immutable": false,
                              "Link": null
                            },
                            "type": "boolean"
                          },
                          "allowedIntegrations": {
                            "description": "Whitelisting of integration's allowed.\nDefault is `maskinporten`",
                            "example": {
                              "Availability": "",
                              "Default": "maskinporten",
                              "Deprecated": false,
                              "Experimental": false,
                              "Hidden": false,
                              "Immutable": false,
                              "Link": [
                                "https://docs.digdir.no/maskinporten_guide_apitilbyder.html#scope-begrensninger"
                              ]
                            },
                            "items": {
                              "type": "string"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "atMaxAge": {
                            "description": "Max time in seconds for a issued access_token.\nDefault is `30` sec.",
                            "example": {
                              "Availability": "",
                              "Default": "30",
                              "Deprecated": false,
                              "Experimental": false,
                              "Hidden": false,
                              "Immutable": false,
                              "Link": null
                            },
                            "maximum": 680,
                            "minimum": 30,
                            "type": "integer"
                          },
                          "consumers": {
                            "description": "External consumers granted access to this scope and able to request access_token.",
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "This is a describing field intended for clarity not used for any other purpose.",
                                  "type": "string"
                                },
                                "orgno": {
                                  "description": "The external business/organization number.",
                                  "pattern": "^\\d{9}$",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "orgno"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "delegationSource": {
                            "description": "Delegation source for the scope. Default is empty, which means no delegation is allowed.",
                            "enum": [
                              "altinn"
                            ],
                            "example": {
                              "Availability": "",
                              "Default": "",
                              "Deprecated": false,
                              "Experimental": false,
                              "Hidden": false,
                              "Immutable": false,
                              "Link": [
                                "https://docs.digdir.no/docs/Maskinporten/maskinporten_func_delegering"
                              ]
                            },
                            "type": "string"
                          },
                          "enabled": {
                            "description": "If Enabled the configured scope is available to be used and consumed by organizations granted access.",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The actual subscope combined with `Product`.\nEnsure that `\u003cProduct\u003e\u003cName\u003e` matches `Pattern`.",
                            "example": {
                              "Availability": "",
                              "Default": "false",
                              "Deprecated": false,
                              "Experimental": false,
                              "Hidden": false,
                              "Immutable": false,
                              "Link": null
                            },
                            "pattern": "^([a-zæøå0-9]+\\/?)+(\\:[a-zæøå0-9]+)*[a-zæøå0-9]+(\\.[a-zæøå0-9]+)*$",
                            "type": "string"
                          },
                          "product": {
                            "description": "The product-area your application belongs to e.g. arbeid, helse ...\nThis will be included in the final scope `nav:\u003cProduct\u003e\u003cName\u003e`.",
                            "pattern": "^[a-z0-9]+$",
                            "type": "string"
                          },
                          "separator": {
                            "description": "Separator is the character that separates `product` and `name` in the final scope:\n`scope := \u003cprefix\u003e:\u003cproduct\u003e\u003cseparator\u003e\u003cname\u003e`\nThis overrides the default separator.\nThe default separator is `:`. If `name` contains `/`, the default separator is instead `/`.",
                            "maxLength": 1,
                            "minLength": 1,
                            "pattern": "^[\\/:]$",
                            "type": "string"
                          }
                        },
                        "required": [
                          "enabled",
                          "name",
                          "product"
                        ],
                        "type": "object",
                        "x-kubernetes-validations": [
                          {
                            "message": "scopes.exposes[].separator must be set to \"/\" when scopes.exposes[].delegationSource is set",
                            "rule": "!has(self.delegationSource) || (has(self.separator) \u0026\u0026 self.separator == \"/\")"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "enabled"
              ],
              "type": "object"
            },
            "observability": {
              "additionalProperties": false,
              "description": "Configuration options related to application observability.",
              "example": {
                "Availability": "",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://doc.nais.io/observability/"
                ]
              },
              "properties": {
                "autoInstrumentation": {
                  "additionalProperties": false,
                  "description": "Auto-instrumentiation for your application using OpenTelemetry for collecting telemetry data such as traces, metrics and logs.",
                  "example": {
                    "Availability": "",
                    "Default": "",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://doc.nais.io/observability/auto-instrumentation/"
                    ]
                  },
                  "properties": {
                    "destinations": {
                      "description": "Destinations are where telemetry data should be stored.",
                      "example": {
                        "Availability": "",
                        "Default": "",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": [
                          "https://doc.nais.io/observability/reference/auto-config/#destinations"
                        ]
                      },
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Destination ID.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "enabled": {
                      "description": "Enable automatic instrumentation of your application using OpenTelemetry Agent.",
                      "type": "boolean"
                    },
                    "runtime": {
                      "description": "Application runtime. Supported runtimes are `java`, `nodejs`, `python`, `sdk`.",
                      "enum": [
                        "java",
                        "nodejs",
                        "python",
                        "sdk"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "logging": {
                  "additionalProperties": false,
                  "description": "Configure logging for your application.",
                  "example": {
                    "Availability": "",
                    "Default": "",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": [
                      "https://doc.nais.io/observability/logging/"
                    ]
                  },
                  "properties": {
                    "destinations": {
                      "description": "Log destinations for where to forward application logs for persistent storage. Leave empty to use default destinations.",
                      "example": {
                        "Availability": "",
                        "Default": "",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": [
                          "https://doc.nais.io/observability/logging/#log-destinations"
                        ]
                      },
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "enabled": {
                      "default": true,
                      "description": "Enable forwarding of application logs to persistent storage.",
                      "example": {
                        "Availability": "",
                        "Default": "true",
                        "Deprecated": false,
                        "Experimental": false,
                        "Hidden": false,
                        "Immutable": false,
                        "Link": null
                      },
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "tracing": {
                  "additionalProperties": false,
                  "description": "Enable application performance monitoring with traces collected using OpenTelemetry and the OTLP exporter.\nDeprecated. Use AutoInstrumentation instead.",
                  "example": {
                    "Availability": "",
                    "Default": "",
                    "Deprecated": true,
                    "Experimental": false,
                    "Hidden": true,
                    "Immutable": false,
                    "Link": null
                  },
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "openSearch": {
              "additionalProperties": false,
              "description": "OpenSearch instance to get credentials for.\nMust be owned by same team.",
              "example": {
                "Availability": "",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://doc.nais.io/persistence/opensearch/"
                ]
              },
              "properties": {
                "access": {
                  "description": "Access level for OpenSearch user",
                  "enum": [
                    "read",
                    "write",
                    "readwrite",
                    "admin"
                  ],
                  "type": "string"
                },
                "instance": {
                  "description": "Configure your application to access your OpenSearch instance.\nThe last part of the name used when creating the instance (ie. opensearch-{team}-{instance})",
                  "type": "string"
                }
              },
              "required": [
                "instance"
              ],
              "type": "object"
            },
            "port": {
              "description": "The port number which is exposed by the container and should receive traffic.\nNote that ports under 1024 are unavailable.",
              "type": "integer"
            },
            "preStopHook": {
              "additionalProperties": false,
              "description": "PreStopHook is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.\nThe handler is not called if the container crashes or exits by itself.\nThe reason for termination is passed to the handler.",
              "example": {
                "Availability": "",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://doc.nais.io/workloads/explanations/good-practices/#handles-termination-gracefully",
                  "https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                ]
              },
              "properties": {
                "exec": {
                  "additionalProperties": false,
                  "description": "Command that should be run inside the main container just before the pod is shut down by Kubernetes.",
                  "properties": {
                    "command": {
                      "description": "Command is the command line to execute inside the container before the pod is shut down.\nThe command is not run inside a shell, so traditional shell instructions (pipes, redirects, etc.) won't work.\nTo use a shell, you need to explicitly call out to that shell.\n\n\nIf the exit status is non-zero, the pod will still be shut down, and marked as `Failed`.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "http": {
                  "additionalProperties": false,
                  "description": "HTTP GET request that is called just before the pod is shut down by Kubernetes.",
                  "properties": {
                    "path": {
                      "description": "Path to access on the HTTP server.",
                      "type": "string"
                    },
                    "port": {
                      "description": "Port to access on the container.\nDefaults to application port, as defined in `.spec.port`.",
                      "maximum": 65535,
                      "minimum": 1,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "path"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "preStopHookPath": {
              "description": "An HTTP GET will be issued to this endpoint at least once before the pod is terminated.\nThis feature is deprecated and will be removed in the next major version (nais.io/v1).",
              "example": {
                "Availability": "",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://doc.nais.io/workloads/explanations/good-practices/#handles-termination-gracefully"
                ]
              },
              "type": "string"
            },
            "prometheus": {
              "additionalProperties": false,
              "description": "Prometheus is used to [scrape metrics from the pod](https://doc.nais.io/observability/metrics/).\nUse this configuration to override the default values.",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "path": {
                  "type": "string"
                },
                "port": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "readiness": {
              "additionalProperties": false,
              "description": "Sometimes, applications are temporarily unable to serve traffic. For example, an application might need\nto load large data or configuration files during startup, or depend on external services after startup.\nIn such cases, you don't want to kill the application, but you don’t want to send it requests either.\nKubernetes provides readiness probes to detect and mitigate these situations. A pod with containers\nreporting that they are not ready does not receive traffic through Kubernetes Services.\nRead more about this over at the [Kubernetes readiness documentation](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/).",
              "properties": {
                "failureThreshold": {
                  "description": "When a Pod starts, and the probe fails, Kubernetes will try _failureThreshold_ times before giving up.\nGiving up in case of a startup probe means restarting the Pod.",
                  "type": "integer"
                },
                "initialDelay": {
                  "description": "Number of seconds after the container has started before startup probes are initiated.",
                  "type": "integer"
                },
                "path": {
                  "description": "HTTP endpoint path that signals 200 OK if the application has started successfully.",
                  "type": "string"
                },
                "periodSeconds": {
                  "description": "How often (in seconds) to perform the probe.",
                  "type": "integer"
                },
                "port": {
                  "description": "Port for the startup probe.",
                  "type": "integer"
                },
                "timeout": {
                  "description": "Number of seconds after which the probe times out.",
                  "type": "integer"
                }
              },
              "required": [
                "path"
              ],
              "type": "object"
            },
            "redis": {
              "description": "List of redis instances this job needs credentials for.\nMust be owned by same team.",
              "example": {
                "Availability": "",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://doc.nais.io/persistence/redis/"
                ]
              },
              "items": {
                "properties": {
                  "access": {
                    "description": "Access level for redis user",
                    "enum": [
                      "read",
                      "write",
                      "readwrite",
                      "admin"
                    ],
                    "type": "string"
                  },
                  "instance": {
                    "description": "The last part of the name used when creating the instance (ie. redis-{team}-{instance})",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "replicas": {
              "additionalProperties": false,
              "description": "The numbers of pods to run in parallel.",
              "properties": {
                "cpuThresholdPercentage": {
                  "description": "Deprecated: Use `spec.scalingStrategy.cpu.thresholdPercentage` instead.\nAmount of CPU usage before the autoscaler kicks in.\nIf anything under ScalingStrategy is set, that takes precedence.",
                  "example": {
                    "Availability": "",
                    "Default": "",
                    "Deprecated": true,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": null
                  },
                  "type": "integer"
                },
                "disableAutoScaling": {
                  "description": "Disable autoscaling",
                  "example": {
                    "Availability": "",
                    "Default": "false",
                    "Deprecated": false,
                    "Experimental": false,
                    "Hidden": false,
                    "Immutable": false,
                    "Link": null
                  },
                  "type": "boolean"
                },
                "max": {
                  "description": "The pod autoscaler will increase replicas when required up to the maximum.",
                  "type": "integer"
                },
                "min": {
                  "description": "The minimum amount of running replicas for a deployment.",
                  "type": "integer"
                },
                "scalingStrategy": {
                  "additionalProperties": false,
                  "description": "ScalingStrategy configures how automatic scaling is performed.",
                  "properties": {
                    "cpu": {
                      "additionalProperties": false,
                      "description": "Configures HPA based on CPU usage.",
                      "properties": {
                        "thresholdPercentage": {
                          "description": "Amount of CPU usage before the autoscaler kicks in.",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "kafka": {
                      "additionalProperties": false,
                      "description": "Configures HPA based on Kafka lag.",
                      "properties": {
                        "consumerGroup": {
                          "description": "ConsumerGroup your application uses when consuming",
                          "type": "string"
                        },
                        "threshold": {
                          "description": "Threshold is the amount of lag allowed before the application should scale up",
                          "type": "integer"
                        },
                        "topic": {
                          "description": "Topic your application is consuming",
                          "type": "string"
                        }
                      },
                      "required": [
                        "consumerGroup",
                        "threshold",
                        "topic"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "resources": {
              "additionalProperties": false,
              "description": "When Containers have [resource requests](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) specified,\nthe Kubernetes scheduler can make better decisions about which nodes to place pods on.",
              "example": {
                "Availability": "",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://doc.nais.io/workloads/explanations/good-practices/#set-reasonable-resource-requests-and-limits"
                ]
              },
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "description": "Limit defines the maximum amount of resources a container can use before getting evicted.",
                  "properties": {
                    "cpu": {
                      "pattern": "^\\d+m?$",
                      "type": "string"
                    },
                    "memory": {
                      "pattern": "^\\d+[KMG]i$",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "description": "Request defines the amount of resources a container is allocated on startup.",
                  "properties": {
                    "cpu": {
                      "pattern": "^\\d+m?$",
                      "type": "string"
                    },
                    "memory": {
                      "pattern": "^\\d+[KMG]i$",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "secureLogs": {
              "additionalProperties": false,
              "description": "Whether to enable a sidecar container for secure logging.",
              "properties": {
                "enabled": {
                  "description": "Whether to enable a sidecar container for secure logging.\nIf enabled, a volume is mounted in the pods where secure logs can be saved.",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled"
              ],
              "type": "object"
            },
            "service": {
              "additionalProperties": false,
              "description": "Specify which port and protocol is used to connect to the application in the container.\nDefaults to HTTP on port 80.",
              "properties": {
                "port": {
                  "description": "Port for the default service. Default port is 80.",
                  "format": "int32",
                  "type": "integer"
                },
                "protocol": {
                  "description": "Which protocol the backend service runs on. Default is `http`.",
                  "enum": [
                    "http",
                    "redis",
                    "tcp",
                    "grpc"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "port"
              ],
              "type": "object"
            },
            "skipCaBundle": {
              "description": "Whether to skip injection of NAV certificate authority bundle or not. Defaults to false.",
              "type": "boolean"
            },
            "startup": {
              "additionalProperties": false,
              "description": "Kubernetes uses startup probes to know when a container application has started. If such a probe is configured,\nit disables liveness and readiness checks until it succeeds, making sure those probes don't interfere with the\napplication startup. This can be used to adopt liveness checks on slow starting containers, avoiding them getting\nkilled by Kubernetes before they are up and running.",
              "properties": {
                "failureThreshold": {
                  "description": "When a Pod starts, and the probe fails, Kubernetes will try _failureThreshold_ times before giving up.\nGiving up in case of a startup probe means restarting the Pod.",
                  "type": "integer"
                },
                "initialDelay": {
                  "description": "Number of seconds after the container has started before startup probes are initiated.",
                  "type": "integer"
                },
                "path": {
                  "description": "HTTP endpoint path that signals 200 OK if the application has started successfully.",
                  "type": "string"
                },
                "periodSeconds": {
                  "description": "How often (in seconds) to perform the probe.",
                  "type": "integer"
                },
                "port": {
                  "description": "Port for the startup probe.",
                  "type": "integer"
                },
                "timeout": {
                  "description": "Number of seconds after which the probe times out.",
                  "type": "integer"
                }
              },
              "required": [
                "path"
              ],
              "type": "object"
            },
            "strategy": {
              "additionalProperties": false,
              "description": "Specifies the strategy used to replace old Pods by new ones.",
              "properties": {
                "rollingUpdate": {
                  "additionalProperties": false,
                  "description": "Spec to control the desired behavior of rolling update.",
                  "properties": {
                    "maxSurge": {
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "description": "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 25%.\nExample: when this is set to 30%, the new ReplicaSet can be scaled up immediately when\nthe rolling update starts, such that the total number of old and new pods do not exceed\n130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods running\nat any time during the update is at most 130% of desired pods.",
                      "x-kubernetes-int-or-string": true
                    },
                    "maxUnavailable": {
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "description": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods\nimmediately when the rolling update starts. Once new pods are ready, old ReplicaSet\ncan be scaled down further, followed by scaling up the new ReplicaSet, ensuring\nthat the total number of pods available at all times during the update is at\nleast 70% of desired pods.",
                      "x-kubernetes-int-or-string": true
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "description": "Specifies the strategy used to replace old Pods by new ones.\n`RollingUpdate` is the default value.",
                  "enum": [
                    "Recreate",
                    "RollingUpdate"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "terminationGracePeriodSeconds": {
              "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nFor most applications, the default is more than enough. Defaults to 30 seconds.",
              "format": "int64",
              "maximum": 180,
              "minimum": 0,
              "type": "integer"
            },
            "tokenx": {
              "additionalProperties": false,
              "description": "Provisions and configures a TokenX client for your application.",
              "example": {
                "Availability": "",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://doc.nais.io/security/auth/tokenx/"
                ]
              },
              "properties": {
                "enabled": {
                  "description": "If enabled, will provision and configure a TokenX client and inject an accompanying secret.",
                  "type": "boolean"
                },
                "mountSecretsAsFilesOnly": {
                  "description": "If enabled, secrets for TokenX will be mounted as files only, i.e. not as environment variables.",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled"
              ],
              "type": "object"
            },
            "ttl": {
              "description": "After the specified TTL, the application will be deleted.",
              "type": "string"
            },
            "vault": {
              "additionalProperties": false,
              "description": "Provides secrets management, identity-based access, and encrypting application data for auditing of secrets\nfor applications, systems, and users.",
              "example": {
                "Availability": "on-premises",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": [
                  "https://github.com/navikt/vault-iac/tree/master/doc"
                ]
              },
              "properties": {
                "enabled": {
                  "description": "If set to true, fetch secrets from Vault and inject into the pods.",
                  "type": "boolean"
                },
                "paths": {
                  "description": "List of secret paths to be read from Vault and injected into the pod's filesystem.\nOverriding the `paths` array is optional, and will give you fine-grained control over which Vault paths that will be mounted on the file system.\n\n\nBy default, the list will contain an entry with\n\n\n`kvPath: /kv/\u003cenvironment\u003e/\u003czone\u003e/\u003capplication\u003e/\u003cnamespace\u003e`\n`mountPath: /var/run/secrets/nais.io/vault`\n\n\nthat will always be attempted to be mounted.",
                  "items": {
                    "properties": {
                      "format": {
                        "description": "Format of the secret that should be processed.",
                        "enum": [
                          "flatten",
                          "json",
                          "yaml",
                          "env",
                          "properties",
                          ""
                        ],
                        "type": "string"
                      },
                      "kvPath": {
                        "description": "Path to Vault key/value store that should be mounted into the file system.",
                        "type": "string"
                      },
                      "mountPath": {
                        "description": "File system path that the secret will be mounted into.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "kvPath",
                      "mountPath"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "sidecar": {
                  "description": "If enabled, the sidecar will automatically refresh the token's Time-To-Live before it expires.",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "webproxy": {
              "description": "Inject on-premises web proxy configuration into the application pod.\nMost Linux applications should auto-detect these settings from the `$HTTP_PROXY`, `$HTTPS_PROXY` and `$NO_PROXY` environment variables (and their lowercase counterparts).\nJava applications can start the JVM using parameters from the `$JAVA_PROXY_OPTIONS` environment variable.",
              "example": {
                "Availability": "on-premises",
                "Default": "",
                "Deprecated": false,
                "Experimental": false,
                "Hidden": false,
                "Immutable": false,
                "Link": null
              },
              "type": "boolean"
            }
          },
          "required": [
            "image"
          ],
          "type": "object"
        },
        "status": {
          "additionalProperties": false,
          "description": "Status contains different NAIS status properties",
          "properties": {
            "conditions": {
              "items": {
                "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
                "properties": {
                  "lastTransitionTime": {
                    "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                    "format": "date-time",
                    "type": "object"
                  },
                  "message": {
                    "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                    "maxLength": 32768,
                    "type": "string"
                  },
                  "observedGeneration": {
                    "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                    "format": "int64",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "reason": {
                    "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                    "maxLength": 1024,
                    "minLength": 1,
                    "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                    "type": "string"
                  },
                  "status": {
                    "description": "status of the condition, one of True, False, Unknown.",
                    "enum": [
                      "True",
                      "False",
                      "Unknown"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                    "maxLength": 316,
                    "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                    "type": "string"
                  }
                },
                "required": [
                  "lastTransitionTime",
                  "message",
                  "reason",
                  "status",
                  "type"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "correlationID": {
              "type": "string"
            },
            "deploymentRolloutStatus": {
              "type": "string"
            },
            "rolloutCompleteTime": {
              "format": "int64",
              "type": "integer"
            },
            "synchronizationHash": {
              "type": "string"
            },
            "synchronizationState": {
              "type": "string"
            },
            "synchronizationTime": {
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "spec",
        "kind",
        "metadata",
        "apiVersion"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "nais.io",
          "kind": "Application",
          "version": "nais.io/v1alpha1"
        }
      ]
    }
  ]
}
